# ====================================
# PRODUCTION КОНФИГУРАЦИЯ ИИ-БОТА
# ====================================
# Скопируйте этот файл в /opt/llm-bot/config/.env
# и замените все значения на реальные

# === ОСНОВНЫЕ НАСТРОЙКИ ===
DATABASE_URL=postgresql+asyncpg://postgres:ЗАМЕНИТЕ_НА_СИЛЬНЫЙ_ПАРОЛЬ@postgres:5432/catalog_db
BOT_TOKEN=ЗАМЕНИТЕ_НА_ТОКЕН_TELEGRAM_БОТА
POSTGRES_PASSWORD=ЗАМЕНИТЕ_НА_СИЛЬНЫЙ_ПАРОЛЬ

# === LLM ПРОВАЙДЕР (выберите один) ===

# Вариант 1: OpenAI (по умолчанию, лучшее качество)
DEFAULT_LLM_PROVIDER=openai
OPENAI_API_KEY=sk-ЗАМЕНИТЕ_НА_ВАШ_OPENAI_KEY

# Вариант 2: YandexGPT (для российских серверов)
# DEFAULT_LLM_PROVIDER=yandex
# YANDEX_API_KEY=ЗАМЕНИТЕ_НА_ВАШ_YANDEX_API_KEY
# YANDEX_FOLDER_ID=ЗАМЕНИТЕ_НА_ВАШ_FOLDER_ID

# === EMBEDDINGS (CPU-оптимизированные) ===
# Используется для векторного поиска по каталогу
EMBEDDING_PROVIDER=sentence-transformers
EMBEDDING_MODEL=sentence-transformers/paraphrase-multilingual-MiniLM-L12-v2
EMBEDDING_BATCH_SIZE=32

# === CRM ИНТЕГРАЦИЯ ===
ZOHO_TOKEN_ENDPOINT=https://accounts.zoho.com/oauth/v2/token
# Дополнительные настройки Zoho добавьте при необходимости:
# ZOHO_CLIENT_ID=your_client_id
# ZOHO_CLIENT_SECRET=your_client_secret
# ZOHO_REFRESH_TOKEN=your_refresh_token

# === УВЕДОМЛЕНИЯ ===
# Telegram чат для уведомлений менеджеров (получите ID через @userinfobot)
MANAGER_TELEGRAM_CHAT_ID=-1001234567890

# Telegram ID администраторов (через запятую, получите через @userinfobot)
ADMIN_TELEGRAM_IDS=123456789,987654321

# === ПУТИ (НЕ ИЗМЕНЯЙТЕ!) ===
CHROMA_PERSIST_DIR=/app/data/chroma
UPLOAD_DIR=/app/data/uploads

# === РЕЖИМ РАБОТЫ ===
DEBUG=false
LOG_LEVEL=INFO

# === БЕЗОПАСНОСТЬ ===
# Генерируйте сложные случайные строки для этих параметров
WEBHOOK_SECRET=ЗАМЕНИТЕ_НА_СЛУЧАЙНУЮ_СТРОКУ_32_СИМВОЛА
ADMIN_SECRET_KEY=ЗАМЕНИТЕ_НА_СЛУЧАЙНУЮ_СТРОКУ_64_СИМВОЛА

# === EMAIL УВЕДОМЛЕНИЯ (опционально) ===
# Раскомментируйте и настройте при необходимости:
# SMTP_HOST=smtp.gmail.com
# SMTP_PORT=587
# SMTP_USER=your_email@gmail.com
# SMTP_PASSWORD=your_app_password
# MANAGER_EMAILS=manager1@company.com,manager2@company.com

# === ДОПОЛНИТЕЛЬНЫЕ НАСТРОЙКИ ===
# Таймаут неактивности для создания лидов (в минутах)
LEAD_INACTIVITY_TIMEOUT=30

# Максимальное количество сообщений в контексте LLM
MAX_CONTEXT_MESSAGES=20

# Таймаут для LLM запросов (в секундах)
LLM_TIMEOUT=30

# === МОНИТОРИНГ ===
# Интервал health checks (в секундах)
HEALTH_CHECK_INTERVAL=60

# === ПРОИЗВОДИТЕЛЬНОСТЬ ===
# Максимальное количество одновременных запросов к LLM
MAX_CONCURRENT_LLM_REQUESTS=10

# Размер пула соединений к БД
DB_POOL_SIZE=20
DB_MAX_OVERFLOW=30

# === НАСТРОЙКИ ПОИСКА ПО КАТАЛОГУ ===
# Минимальный score для показа результатов (0.0-1.0)
# Рекомендуется: 0.45 для высокого качества, 0.3 для большего охвата
SEARCH_MIN_SCORE=0.45

# Boost за совпадения в названии товара (0.0-0.5)
# Рекомендуется: 0.2 для умеренного приоритета названию
SEARCH_NAME_BOOST=0.2

# Boost за совпадения в артикуле товара (0.0-0.5)
# Рекомендуется: 0.3 (выше чем название) для точного поиска по артикулу
SEARCH_ARTICLE_BOOST=0.3

# Максимальное количество результатов поиска
# Рекомендуется: 10 для оптимального UX, не более 20
SEARCH_MAX_RESULTS=10

# ====================================
# ИНСТРУКЦИИ ПО НАСТРОЙКЕ:
# ====================================

# 1. POSTGRES_PASSWORD и в DATABASE_URL должны совпадать
# 2. Для YandexGPT получите ключи в Yandex Cloud Console
# 3. Для OpenAI получите ключ на platform.openai.com
# 4. BOT_TOKEN получите у @BotFather в Telegram
# 5. MANAGER_TELEGRAM_CHAT_ID - создайте группу, добавьте бота, получите ID
# 6. ADMIN_TELEGRAM_IDS - ваши личные Telegram ID (через @userinfobot)
# 7. Генерируйте случайные строки для WEBHOOK_SECRET и ADMIN_SECRET_KEY
# 8. SEARCH_* - настройте поиск под ваши потребности:
#    - Увеличьте SEARCH_MIN_SCORE для более строгого отбора
#    - Уменьшите для большего охвата результатов

# ====================================
# ПРОВЕРКА КОНФИГУРАЦИИ:
# ====================================
# После настройки запустите: docker-compose -f docker-compose.prod.yml config
# Это покажет итоговую конфигурацию и проверит синтаксис
