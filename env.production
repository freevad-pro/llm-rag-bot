# ====================================
# PRODUCTION LLM-BOT CONFIGURATION
# ====================================
# Copy this file to /opt/llm-bot/config/.env
# and replace all values with real ones

# === BASIC SETTINGS ===
DATABASE_URL=postgresql+asyncpg://postgres:REPLACE_WITH_STRONG_PASSWORD@postgres:5432/catalog_db
BOT_TOKEN=REPLACE_WITH_TELEGRAM_BOT_TOKEN
BOT_USERNAME=REPLACE_WITH_YOUR_BOT_USERNAME
POSTGRES_PASSWORD=REPLACE_WITH_STRONG_PASSWORD

# === LLM PROVIDER (choose one) ===

# Option 1: OpenAI (default, best quality)
DEFAULT_LLM_PROVIDER=openai
OPENAI_API_KEY=sk-REPLACE_WITH_YOUR_OPENAI_KEY

# AI Model settings
OPENAI_DEFAULT_MODEL=gpt-4o-mini
OPENAI_AVAILABLE_MODELS=gpt-4o-mini,gpt-4o
YANDEX_DEFAULT_MODEL=yandexgpt-lite
YANDEX_AVAILABLE_MODELS=yandexgpt-lite,yandexgpt

# Option 2: YandexGPT (for Russian servers)
# DEFAULT_LLM_PROVIDER=yandex
# YANDEX_API_KEY=REPLACE_WITH_YOUR_YANDEX_API_KEY
# YANDEX_FOLDER_ID=REPLACE_WITH_YOUR_FOLDER_ID

# === EMBEDDING SETTINGS ===
# Local embeddings (no API costs, good for privacy)
EMBEDDING_PROVIDER=sentence-transformers
EMBEDDING_MODEL=paraphrase-multilingual-MiniLM-L12-v2
EMBEDDING_BATCH_SIZE=100

# Alternative: OpenAI embeddings (better quality, costs money)
# EMBEDDING_PROVIDER=openai
# EMBEDDING_MODEL=text-embedding-3-small

# === CHROMA DB SETTINGS ===
ANONYMIZED_TELEMETRY=false
ALLOW_RESET=false

# === SEARCH SETTINGS ===
# Minimum relevance score for search results (0.0-1.0)
SEARCH_MIN_SCORE=0.45
# Boost for product name matches (0.0-0.5)
SEARCH_NAME_BOOST=0.2
# Boost for product article matches (0.0-0.5)
SEARCH_ARTICLE_BOOST=0.3
# Maximum number of search results
SEARCH_MAX_RESULTS=10

# === CRM INTEGRATION ===
ZOHO_TOKEN_ENDPOINT=https://accounts.zoho.com/oauth/v2/token
# Optional Zoho CRM credentials:
# ZOHO_CLIENT_ID=your_client_id
# ZOHO_CLIENT_SECRET=your_client_secret
# ZOHO_REFRESH_TOKEN=your_refresh_token

# === NOTIFICATIONS ===
# Telegram chat ID for manager notifications (get from @userinfobot)
MANAGER_TELEGRAM_CHAT_ID=REPLACE_WITH_MANAGER_CHAT_ID

# Telegram IDs of administrators (comma separated, get from @userinfobot)
ADMIN_TELEGRAM_IDS=REPLACE_WITH_ADMIN_TELEGRAM_IDS

# === PATHS (DO NOT CHANGE!) ===
CHROMA_PERSIST_DIR=/app/data/chroma
UPLOAD_DIR=/app/data/uploads

# Application URL (для ссылок в email)
BASE_URL=https://your-domain.com

# SMTP Settings (для отправки email уведомлений)
SMTP_HOST=
SMTP_USER=
SMTP_PASSWORD=

# === PRODUCTION MODE ===
DEBUG=false
LOG_LEVEL=INFO
ENVIRONMENT=production

# === TELEGRAM BOT ===
# In production bot runs in separate container
DISABLE_TELEGRAM_BOT=false

# === SECURITY ===
# Generate strong random secrets for production!
WEBHOOK_SECRET=REPLACE_WITH_RANDOM_WEBHOOK_SECRET_32_CHARS
ADMIN_SECRET_KEY=REPLACE_WITH_RANDOM_ADMIN_SECRET_64_CHARS

# === EMAIL NOTIFICATIONS (OPTIONAL) ===
# Uncomment and configure for email alerts:
# SMTP_HOST=smtp.gmail.com
# SMTP_PORT=587
# SMTP_USER=your_email@gmail.com
# SMTP_PASSWORD=your_app_password
# MANAGER_EMAILS=manager1@company.com,manager2@company.com

# === BUSINESS SETTINGS ===
# Lead inactivity timeout for auto-creation (in minutes)
LEAD_INACTIVITY_TIMEOUT=30

# Maximum number of messages in LLM context
MAX_CONTEXT_MESSAGES=20

# Timeout for LLM requests (in seconds)
LLM_TIMEOUT=30

# === MONITORING ===
# Health check interval (in seconds)
HEALTH_CHECK_INTERVAL=60

# === PERFORMANCE ===
# Maximum concurrent LLM requests
MAX_CONCURRENT_LLM_REQUESTS=10

# Database connection pool settings
DB_POOL_SIZE=20
DB_MAX_OVERFLOW=30

# ====================================
# PRODUCTION DEPLOYMENT CHECKLIST:
# ====================================

# 1. Replace ALL placeholder values above
# 2. Generate strong passwords (use: openssl rand -base64 32)
# 3. Set up proper SSL certificates
# 4. Configure firewall rules
# 5. Set up monitoring and backups
# 6. Test all integrations before going live
# 7. Set up log rotation and monitoring

# ====================================
# SECURITY NOTES:
# ====================================

# - Never commit this file with real credentials to git
# - Use environment-specific secrets management
# - Regularly rotate API keys and passwords
# - Monitor access logs for suspicious activity
# - Keep all dependencies updated

# ====================================
# VALIDATION COMMANDS:
# ====================================

# Test configuration: docker-compose -f docker-compose.prod.yml config
# Check health: curl http://localhost:8000/health
# View logs: docker-compose -f docker-compose.prod.yml logs -f

# === AI COST CONTROL ===
# Monthly limits for AI usage (production values)
MONTHLY_TOKEN_LIMIT=500000
MONTHLY_COST_LIMIT_USD=50.00
COST_ALERT_THRESHOLD=0.8
AUTO_DISABLE_ON_LIMIT=true

# Alert settings
COST_ALERT_ENABLED=true
WEEKLY_USAGE_REPORT=true