"""
–ë–∞–∑–æ–≤—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ –¥–ª—è Telegram –±–æ—Ç–∞
–†–µ–∞–ª–∏–∑—É–µ—Ç /start, /help, /contact —Å–æ–≥–ª–∞—Å–Ω–æ @vision.md
"""
from aiogram import Router, F
from aiogram.filters import CommandStart, Command
from aiogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.fsm.context import FSMContext
from sqlalchemy.ext.asyncio import AsyncSession

from src.infrastructure.logging.hybrid_logger import hybrid_logger
from src.application.telegram.services.user_service import ensure_user_exists
from src.application.telegram.services.message_service import save_message
from src.application.telegram.keyboards.lead_keyboards import (
    get_main_reply_keyboard, 
    get_menu_reply_keyboard
)
from src.application.telegram.keyboards.search_keyboards import get_main_search_keyboard


router = Router()


@router.message(CommandStart())
async def handle_start(message: Message, session: AsyncSession):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
    –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
    """
    try:
        # –°–æ–∑–¥–∞–µ–º –∏–ª–∏ –ø–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user = await ensure_user_exists(
            session=session,
            chat_id=message.chat.id,
            telegram_user_id=message.from_user.id,
            username=message.from_user.username,
            first_name=message.from_user.first_name,
            last_name=message.from_user.last_name
        )
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ–º–∞–Ω–¥—É –≤ –∏—Å—Ç–æ—Ä–∏—é
        await save_message(
            session=session,
            chat_id=message.chat.id,
            role="user",
            content=message.text
        )
        
        # –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        welcome_text = f"""
üëã <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!</b>

–Ø - AI-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –¥–ª—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –ø–æ –∫–∞—Ç–∞–ª–æ–≥—É —Ç–æ–≤–∞—Ä–æ–≤ –∏ —É—Å–ª—É–≥.

<b>–ß—Ç–æ —è —É–º–µ—é:</b>
‚Ä¢ –ü–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–æ–≤ –ø–æ –æ–ø–∏—Å–∞–Ω–∏—é
‚Ä¢ –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –ø–æ —É—Å–ª—É–≥–∞–º –∫–æ–º–ø–∞–Ω–∏–∏  
‚Ä¢ –ü–æ–º–æ—â—å –≤ –≤—ã–±–æ—Ä–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è
‚Ä¢ –°–≤—è–∑—å —Å –º–µ–Ω–µ–¥–∂–µ—Ä–∞–º–∏

<b>–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>
/help - —Å–ø—Ä–∞–≤–∫–∞ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é
/contact - —Å–≤—è–∑–∞—Ç—å—Å—è —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º

–ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ, —á—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç! üîç
        """
        
        # Reply –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–æ–π –ú–µ–Ω—é
        keyboard = get_main_reply_keyboard()
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç
        sent_message = await message.answer(
            welcome_text,
            reply_markup=keyboard
        )
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç–≤–µ—Ç –±–æ—Ç–∞
        await save_message(
            session=session,
            chat_id=message.chat.id,
            role="assistant", 
            content=welcome_text
        )
        
        # –õ–æ–≥–∏—Ä—É–µ–º –Ω–∞—á–∞–ª–æ –Ω–æ–≤–æ–≥–æ —á–∞—Ç–∞
        await hybrid_logger.business(
            f"–ù–æ–≤—ã–π —á–∞—Ç: {user.chat_id}",
            {"username": user.username, "first_name": user.first_name}
        )
        
    except Exception as e:
        await hybrid_logger.error(f"–û—à–∏–±–∫–∞ –≤ handle_start: {e}")
        await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")


@router.message(Command("help"))
async def handle_help(message: Message, session: AsyncSession):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help"""
    try:
        # –°–æ–∑–¥–∞–µ–º –∏–ª–∏ –ø–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        await ensure_user_exists(
            session=session,
            chat_id=message.chat.id,
            telegram_user_id=message.from_user.id,
            username=message.from_user.username,
            first_name=message.from_user.first_name,
            last_name=message.from_user.last_name
        )
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ–º–∞–Ω–¥—É
        await save_message(
            session=session,
            chat_id=message.chat.id,
            role="user",
            content=message.text
        )
        
        help_text = """
<b>üìñ –°–ø—Ä–∞–≤–∫–∞ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –±–æ—Ç–∞</b>

<b>üîç –ü–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–æ–≤:</b>
–ü—Ä–æ—Å—Ç–æ –æ–ø–∏—à–∏—Ç–µ, —á—Ç–æ –∏—â–µ—Ç–µ:
‚Ä¢ "–ù—É–∂–µ–Ω –Ω–∞—Å–æ—Å –¥–ª—è –≤–æ–¥—ã"
‚Ä¢ "–ë–æ–ª—Ç—ã –ú12 –æ—Ü–∏–Ω–∫–æ–≤–∞–Ω–Ω—ã–µ"
‚Ä¢ "–≠–ª–µ–∫—Ç—Ä–æ–¥–≤–∏–≥–∞—Ç–µ–ª—å 3 –∫–í—Ç"

<b>üí¨ –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏:</b>
–ó–∞–¥–∞–≤–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å—ã –æ:
‚Ä¢ –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞—Ö
‚Ä¢ –°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è
‚Ä¢ –£—Å–ª–æ–≤–∏—è—Ö –ø–æ—Å—Ç–∞–≤–∫–∏
‚Ä¢ –¶–µ–Ω–∞—Ö –∏ –Ω–∞–ª–∏—á–∏–∏

<b>üìû –°–≤—è–∑—å —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º:</b>
–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /contact –∏–ª–∏ –∫–Ω–æ–ø–∫—É –≤ –º–µ–Ω—é

<b>‚ö° –ë—ã—Å—Ç—Ä—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>
/start - –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É
/search - –ø–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–æ–≤
/categories - –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ç–æ–≤–∞—Ä–æ–≤
/help - —ç—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞
/contact - —Å–≤—è–∑–∞—Ç—å—Å—è —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º

–Ø —Ä–∞–±–æ—Ç–∞—é 24/7 –∏ –æ—Ç–≤–µ—á—É –≤ —Ç–µ—á–µ–Ω–∏–µ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Å–µ–∫—É–Ω–¥! üöÄ
        """
        
        keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [
                InlineKeyboardButton(text="üîç –ü–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–æ–≤", callback_data="new_search"),
                InlineKeyboardButton(text="üìÇ –ö–∞—Ç–µ–≥–æ—Ä–∏–∏", callback_data="search_by_categories")
            ],
            [InlineKeyboardButton(text="üìû –°–≤—è–∑–∞—Ç—å—Å—è —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º", callback_data="contact_manager")]
        ])
        
        sent_message = await message.answer(help_text, reply_markup=keyboard)
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç–≤–µ—Ç
        await save_message(
            session=session,
            chat_id=message.chat.id,
            role="assistant",
            content=help_text
        )
        
    except Exception as e:
        await hybrid_logger.error(f"–û—à–∏–±–∫–∞ –≤ handle_help: {e}")
        await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")


@router.message(Command("contact"))
async def handle_contact(message: Message, session: AsyncSession):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /contact"""
    try:
        # –°–æ–∑–¥–∞–µ–º –∏–ª–∏ –ø–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        await ensure_user_exists(
            session=session,
            chat_id=message.chat.id,
            telegram_user_id=message.from_user.id,
            username=message.from_user.username,
            first_name=message.from_user.first_name,
            last_name=message.from_user.last_name
        )
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ–º–∞–Ω–¥—É
        await save_message(
            session=session,
            chat_id=message.chat.id,
            role="user",
            content=message.text
        )
        
        contact_text = """
<b>üìû –°–≤—è–∑—å —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º</b>

–î–ª—è –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–π –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ —Å –Ω–∞—à–∏–º –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Å—Ç–∞–≤—å—Ç–µ –≤–∞—à–∏ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:

<b>–û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è:</b>
‚Ä¢ –í–∞—à–µ –∏–º—è
‚Ä¢ –¢–µ–ª–µ—Ñ–æ–Ω –ò–õ–ò email

<b>–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ:</b>
‚Ä¢ –ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏
‚Ä¢ –í–∞—à –≤–æ–ø—Ä–æ—Å

–ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ:
"–ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤, +7(999)123-45-67, –û–û–û –†–æ–º–∞—à–∫–∞, –Ω—É–∂–µ–Ω –Ω–∞—Å–æ—Å –¥–ª—è –∫–æ—Ç–µ–ª—å–Ω–æ–π"

–ú–µ–Ω–µ–¥–∂–µ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ —Ä–∞–±–æ—á–µ–≥–æ –¥–Ω—è! üìß
        """
        
        sent_message = await message.answer(contact_text)
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç–≤–µ—Ç
        await save_message(
            session=session,
            chat_id=message.chat.id,
            role="assistant",
            content=contact_text
        )
        
        # –õ–æ–≥–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–≤—è–∑—å
        await hybrid_logger.business(
            "–ó–∞–ø—Ä–æ—Å —Å–≤—è–∑–∏ —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º",
            {"chat_id": message.chat.id, "username": message.from_user.username}
        )
        
    except Exception as e:
        await hybrid_logger.error(f"–û—à–∏–±–∫–∞ –≤ handle_contact: {e}")
        await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")


# –°—Ç–∞—Ä—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ handle_text_message —É–¥–∞–ª–µ–Ω - —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω –≤ llm_handlers.py
# –≠—Ç–æ –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ—Ç –∫–æ–Ω—Ñ–ª–∏–∫—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∏ –ø–æ–∑–≤–æ–ª—è–µ—Ç –∫–æ–º–∞–Ω–¥–∞–º —Ä–∞–±–æ—Ç–∞—Ç—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback –∑–∞–ø—Ä–æ—Å–æ–≤ –æ—Ç inline –∫–Ω–æ–ø–æ–∫
@router.callback_query(F.data == "help")
async def callback_help(callback_query, session: AsyncSession, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback –¥–ª—è –∫–Ω–æ–ø–∫–∏ –ø–æ–º–æ—â–∏"""
    await hybrid_logger.debug(f"üîò –û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback_help –≤—ã–∑–≤–∞–Ω –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {callback_query.from_user.id}")
    await callback_query.answer()
    
    # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ FSM –ø—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–µ –∫ —Å–ø—Ä–∞–≤–∫–µ
    await state.clear()
    
    # –í—ã–∑—ã–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ help —á–µ—Ä–µ–∑ –∏–º–∏—Ç–∞—Ü–∏—é –∫–æ–º–∞–Ω–¥—ã
    fake_message = type('obj', (object,), {
        'chat': callback_query.message.chat,
        'from_user': callback_query.from_user,
        'text': '/help'
    })
    
    await handle_help(fake_message, session)


@router.callback_query(F.data == "contact_manager")
async def callback_contact(callback_query, session: AsyncSession, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback –¥–ª—è –∫–Ω–æ–ø–∫–∏ —Å–≤—è–∑–∏ —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º"""
    await hybrid_logger.debug(f"üîò –û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback_contact –≤—ã–∑–≤–∞–Ω –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {callback_query.from_user.id}")
    await callback_query.answer("–ü–µ—Ä–µ–∫–ª—é—á–∞—é –Ω–∞ —Å–≤—è–∑—å —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º...")
    
    # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ FSM –ø—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–µ –∫ –∫–æ–Ω—Ç–∞–∫—Ç–∞–º
    await state.clear()
    
    # –í—ã–∑—ã–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ contact
    fake_message = type('obj', (object,), {
        'chat': callback_query.message.chat,
        'from_user': callback_query.from_user,
        'text': '/contact'
    })
    
    await handle_contact(fake_message, session)


@router.callback_query(F.data == "main_menu")
async def callback_main_menu(callback_query, session: AsyncSession, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback –¥–ª—è –∫–Ω–æ–ø–∫–∏ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
    await hybrid_logger.debug(f"üîò –û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback_main_menu –≤—ã–∑–≤–∞–Ω –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {callback_query.from_user.id}")
    await callback_query.answer("–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é...")
    
    # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ FSM –ø—Ä–∏ –≤–æ–∑–≤—Ä–∞—Ç–µ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    await state.clear()
    
    # –í—ã–∑—ã–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ start
    fake_message = type('obj', (object,), {
        'chat': callback_query.message.chat,
        'from_user': callback_query.from_user,
        'text': '/start',
        'answer': callback_query.message.edit_text
    })
    
    await handle_start(fake_message, session)


@router.callback_query(F.data == "leave_contacts")
async def callback_leave_contacts(callback_query, session: AsyncSession):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback –¥–ª—è –∫–Ω–æ–ø–∫–∏ –û—Å—Ç–∞–≤–∏—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç—ã"""
    await hybrid_logger.debug(f"üîò –û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback_leave_contacts –≤—ã–∑–≤–∞–Ω –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {callback_query.from_user.id}")
    await callback_query.answer("–ü–µ—Ä–µ—Ö–æ–¥ –∫ —Ñ–æ—Ä–º–µ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤...")
    
    # –í—ã–∑—ã–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ contact –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞—è–≤–∫–∏
    fake_message = type('obj', (object,), {
        'chat': callback_query.message.chat,
        'from_user': callback_query.from_user,
        'text': '/contact',
        'answer': callback_query.message.edit_text
    })
    
    await handle_contact(fake_message, session)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è Reply Keyboard –∫–Ω–æ–ø–æ–∫
@router.message(F.text == "üìã –ú–µ–Ω—é")
async def handle_menu_button(message: Message, session: AsyncSession):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –ú–µ–Ω—é"""
    try:
        # –°–æ–∑–¥–∞–µ–º –∏–ª–∏ –ø–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        await ensure_user_exists(
            session=session,
            chat_id=message.chat.id,
            telegram_user_id=message.from_user.id,
            username=message.from_user.username,
            first_name=message.from_user.first_name,
            last_name=message.from_user.last_name
        )
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        await save_message(
            session=session,
            chat_id=message.chat.id,
            role="user",
            content=message.text
        )
        
        menu_text = """
<b>üìã –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</b>

–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ:
        """
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –æ–ø—Ü–∏—è–º–∏ –º–µ–Ω—é
        keyboard = get_menu_reply_keyboard()
        
        await message.answer(menu_text, reply_markup=keyboard)
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç–≤–µ—Ç
        await save_message(
            session=session,
            chat_id=message.chat.id,
            role="assistant",
            content=menu_text
        )
        
    except Exception as e:
        await hybrid_logger.error(f"–û—à–∏–±–∫–∞ –≤ handle_menu_button: {e}")
        await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")


@router.message(F.text == "üîç –ü–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–æ–≤")
async def handle_search_button(message: Message, session: AsyncSession, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –ü–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–æ–≤ - –≤—ã–∑—ã–≤–∞–µ—Ç —Ç–æ—Ç –∂–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —á—Ç–æ –∏ callback"""
    try:
        # –°–æ–∑–¥–∞–µ–º –∏–ª–∏ –ø–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        await ensure_user_exists(
            session=session,
            chat_id=message.chat.id,
            telegram_user_id=message.from_user.id,
            username=message.from_user.username,
            first_name=message.from_user.first_name,
            last_name=message.from_user.last_name
        )
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        await save_message(
            session=session,
            chat_id=message.chat.id,
            role="user",
            content=message.text
        )
        
        # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ FSM (–∫–∞–∫ –≤ callback –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ)
        await state.clear()
        
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ—Ç –∂–µ —Ç–µ–∫—Å—Ç –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —á—Ç–æ –∏ –≤ callback –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ
        response_text = (
            "üîç <b>–ù–æ–≤—ã–π –ø–æ–∏—Å–∫</b>\n\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –ø–æ–∏—Å–∫–∞:"
        )
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç—É –∂–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —á—Ç–æ –∏ callback –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
        keyboard = get_main_search_keyboard()
        
        await message.answer(
            response_text,
            reply_markup=keyboard
        )
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç–≤–µ—Ç
        await save_message(
            session=session,
            chat_id=message.chat.id,
            role="assistant",
            content=response_text
        )
        
    except Exception as e:
        await hybrid_logger.error(f"–û—à–∏–±–∫–∞ –≤ handle_search_button: {e}")
        await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")


@router.message(F.text == "üìû –°–≤—è–∑–∞—Ç—å—Å—è —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º")
async def handle_contact_button(message: Message, session: AsyncSession, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –°–≤—è–∑–∞—Ç—å—Å—è —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º - –≤—ã–∑—ã–≤–∞–µ—Ç —Ç–æ—Ç –∂–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —á—Ç–æ –∏ callback"""
    try:
        # –°–æ–∑–¥–∞–µ–º –∏–ª–∏ –ø–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        await ensure_user_exists(
            session=session,
            chat_id=message.chat.id,
            telegram_user_id=message.from_user.id,
            username=message.from_user.username,
            first_name=message.from_user.first_name,
            last_name=message.from_user.last_name
        )
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        await save_message(
            session=session,
            chat_id=message.chat.id,
            role="user",
            content=message.text
        )
        
        # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ FSM (–∫–∞–∫ –≤ callback –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ)
        await state.clear()
        
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –ª–∏–¥–æ–≤ –¥–ª—è –≤—ã–∑–æ–≤–∞ —Ç–æ–≥–æ –∂–µ –º–µ—Ç–æ–¥–∞
        from src.application.telegram.handlers.lead_handlers import LeadHandlers
        from src.application.telegram.services.lead_service import LeadService
        from src.application.telegram.keyboards.lead_keyboards import get_contact_manager_keyboard
        
        # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä LeadHandlers
        lead_service = LeadService()
        lead_handlers = LeadHandlers(lead_service)
        
        # –°–æ–∑–¥–∞–µ–º fake callback –¥–ª—è –≤—ã–∑–æ–≤–∞ —Ç–æ–≥–æ –∂–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞
        fake_callback = type('obj', (object,), {
            'message': type('obj', (object,), {
                'edit_text': message.answer,
                'chat': message.chat
            }),
            'from_user': message.from_user,
            'answer': lambda: None  # –ü—É—Å—Ç–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è callback.answer()
        })
        
        # –í—ã–∑—ã–≤–∞–µ–º —Ç–æ—Ç –∂–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —á—Ç–æ –∏ callback
        await lead_handlers.handle_contact_manager(fake_callback, state, session)
        
        # –õ–æ–≥–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–≤—è–∑—å
        await hybrid_logger.business(
            "–ó–∞–ø—Ä–æ—Å —Å–≤—è–∑–∏ —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫—É",
            {"chat_id": message.chat.id, "username": message.from_user.username}
        )
        
    except Exception as e:
        await hybrid_logger.error(f"–û—à–∏–±–∫–∞ –≤ handle_contact_button: {e}")
        await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")


@router.message(F.text == "‚ùì –ü–æ–º–æ—â—å")
async def handle_help_button(message: Message, session: AsyncSession):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –ü–æ–º–æ—â—å"""
    try:
        # –°–æ–∑–¥–∞–µ–º –∏–ª–∏ –ø–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        await ensure_user_exists(
            session=session,
            chat_id=message.chat.id,
            telegram_user_id=message.from_user.id,
            username=message.from_user.username,
            first_name=message.from_user.first_name,
            last_name=message.from_user.last_name
        )
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        await save_message(
            session=session,
            chat_id=message.chat.id,
            role="user",
            content=message.text
        )
        
        help_text = """
<b>üìñ –°–ø—Ä–∞–≤–∫–∞ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –±–æ—Ç–∞</b>

<b>üîç –ü–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–æ–≤:</b>
–ü—Ä–æ—Å—Ç–æ –æ–ø–∏—à–∏—Ç–µ, —á—Ç–æ –∏—â–µ—Ç–µ:
‚Ä¢ "–ù—É–∂–µ–Ω –Ω–∞—Å–æ—Å –¥–ª—è –≤–æ–¥—ã"
‚Ä¢ "–ë–æ–ª—Ç—ã –ú12 –æ—Ü–∏–Ω–∫–æ–≤–∞–Ω–Ω—ã–µ"
‚Ä¢ "–≠–ª–µ–∫—Ç—Ä–æ–¥–≤–∏–≥–∞—Ç–µ–ª—å 3 –∫–í—Ç"

<b>üí¨ –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏:</b>
–ó–∞–¥–∞–≤–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å—ã –æ:
‚Ä¢ –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞—Ö
‚Ä¢ –°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è
‚Ä¢ –£—Å–ª–æ–≤–∏—è—Ö –ø–æ—Å—Ç–∞–≤–∫–∏
‚Ä¢ –¶–µ–Ω–∞—Ö –∏ –Ω–∞–ª–∏—á–∏–∏

<b>üìû –°–≤—è–∑—å —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º:</b>
–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É "üìû –°–≤—è–∑–∞—Ç—å—Å—è —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º" –≤ –º–µ–Ω—é

<b>‚ö° –ë—ã—Å—Ç—Ä—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>
/start - –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É
/search - –ø–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–æ–≤
/categories - –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ç–æ–≤–∞—Ä–æ–≤
/help - —ç—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞
/contact - —Å–≤—è–∑–∞—Ç—å—Å—è —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º

–Ø —Ä–∞–±–æ—Ç–∞—é 24/7 –∏ –æ—Ç–≤–µ—á—É –≤ —Ç–µ—á–µ–Ω–∏–µ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Å–µ–∫—É–Ω–¥! üöÄ
        """
        
        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –æ—Å–Ω–æ–≤–Ω–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ
        keyboard = get_main_reply_keyboard()
        
        await message.answer(help_text, reply_markup=keyboard)
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç–≤–µ—Ç
        await save_message(
            session=session,
            chat_id=message.chat.id,
            role="assistant",
            content=help_text
        )
        
    except Exception as e:
        await hybrid_logger.error(f"–û—à–∏–±–∫–∞ –≤ handle_help_button: {e}")
        await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")


@router.message(F.text == "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
async def handle_main_menu_button(message: Message, session: AsyncSession):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
    try:
        # –°–æ–∑–¥–∞–µ–º –∏–ª–∏ –ø–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        await ensure_user_exists(
            session=session,
            chat_id=message.chat.id,
            telegram_user_id=message.from_user.id,
            username=message.from_user.username,
            first_name=message.from_user.first_name,
            last_name=message.from_user.last_name
        )
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        await save_message(
            session=session,
            chat_id=message.chat.id,
            role="user",
            content=message.text
        )
        
        welcome_text = f"""
üëã <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!</b>

–Ø - AI-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –¥–ª—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –ø–æ –∫–∞—Ç–∞–ª–æ–≥—É —Ç–æ–≤–∞—Ä–æ–≤ –∏ —É—Å–ª—É–≥.

<b>–ß—Ç–æ —è —É–º–µ—é:</b>
‚Ä¢ –ü–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–æ–≤ –ø–æ –æ–ø–∏—Å–∞–Ω–∏—é
‚Ä¢ –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –ø–æ —É—Å–ª—É–≥–∞–º –∫–æ–º–ø–∞–Ω–∏–∏  
‚Ä¢ –ü–æ–º–æ—â—å –≤ –≤—ã–±–æ—Ä–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è
‚Ä¢ –°–≤—è–∑—å —Å –º–µ–Ω–µ–¥–∂–µ—Ä–∞–º–∏

<b>–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>
/help - —Å–ø—Ä–∞–≤–∫–∞ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é
/contact - —Å–≤—è–∑–∞—Ç—å—Å—è —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º

–ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ, —á—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç! üîç
        """
        
        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –æ—Å–Ω–æ–≤–Ω–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ
        keyboard = get_main_reply_keyboard()
        
        await message.answer(welcome_text, reply_markup=keyboard)
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç–≤–µ—Ç
        await save_message(
            session=session,
            chat_id=message.chat.id,
            role="assistant",
            content=welcome_text
        )
        
    except Exception as e:
        await hybrid_logger.error(f"–û—à–∏–±–∫–∞ –≤ handle_main_menu_button: {e}")
        await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
