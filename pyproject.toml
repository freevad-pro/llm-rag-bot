[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "llm-rag-bot"
version = "0.1.0"
description = "AI Agent for client consultation with 40K+ product catalog"
authors = ["AI Assistant <ai@example.com>"]
readme = "README.md"
packages = [{include = "src"}]

[tool.poetry.dependencies]
python = "^3.11"
# Web Framework
fastapi = "^0.104.1"
uvicorn = {extras = ["standard"], version = "^0.24.0"}
jinja2 = "^3.1.2"
python-multipart = "^0.0.6"
itsdangerous = "^2.1.2"  # For session middleware

# Document processing for admin panel
python-docx = "^1.1.0"
PyPDF2 = "^3.0.1"

# Password hashing
bcrypt = "^4.0.1"

# Telegram Bot
aiogram = "^3.4.1"

# Database
sqlalchemy = "^2.0.23"
asyncpg = "^0.29.0"
alembic = "^1.13.1"

# Vector Search  
chromadb = "^0.4.18"  # Стабильная версия

# Sentence-transformers (автоматически установит PyTorch)
sentence-transformers = "^2.2.2"

# PyTorch CPU-only (без CUDA для уменьшения размера образа)
torch = {version = "^2.7.0", source = "pytorch-cpu"}

# Data Processing
pandas = "^2.1.4"
openpyxl = "^3.1.2"

# LLM
openai = "^1.6.1"
httpx = "^0.25.2"

# Configuration and validation
pydantic = {extras = ["email"], version = "^2.5.2"}
pydantic-settings = "^2.1.0"

# Utilities
python-dotenv = "^1.0.0"
numpy = "^1.26.0"

[tool.poetry.group.dev.dependencies]
# Testing framework
pytest = "^7.4.3"
pytest-asyncio = "^0.21.1"
pytest-mock = "^3.12.0"
pytest-cov = "^4.1.0"
pytest-xdist = "^3.5.0"

# Database testing
pytest-postgresql = "^5.0.0"
sqlalchemy-utils = "^0.41.1"
aiosqlite = "^0.19.0"

# HTTP testing
httpx = "^0.25.2"
respx = "^0.20.2"

# Fixtures and factories
factory-boy = "^3.3.0"
faker = "^21.0.0"

# Code quality
black = "^23.11.0"
isort = "^5.12.0"
mypy = "^1.7.1"
flake8 = "^7.0.0"
pre-commit = "^3.6.0"

[tool.black]
line-length = 88
target-version = ['py311']

[tool.isort]
profile = "black"
line_length = 88

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
# Основные настройки
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",                    # Verbose output
    "--strict-markers",      # Строгая проверка маркеров
    "--disable-warnings",    # Отключить предупреждения
    "--tb=short",           # Короткий traceback
    "--asyncio-mode=auto",  # Автоматический async режим
]

# Маркеры для категоризации тестов
markers = [
    "unit: Unit tests (fast)",
    "integration: Integration tests (medium)",
    "e2e: End-to-end tests (slow)", 
    "db: Database tests",
    "api: API tests",
    "telegram: Telegram bot tests",
    "llm: LLM provider tests",
    "search: Search functionality tests",
    "leads: Lead management tests",
    "slow: Slow tests (> 1s)",
]

# Фильтры предупреждений
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/migrations/*", 
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
]

# PyTorch CPU-only source (для серверов без GPU)
[[tool.poetry.source]]
name = "pytorch-cpu"
url = "https://download.pytorch.org/whl/cpu"
priority = "explicit"
