#!/bin/bash
# –°–∫—Ä–∏–ø—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ PostgreSQL
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./scripts/check_postgres_connection.sh

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo -e "${BLUE}üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ PostgreSQL${NC}"
echo

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—É—Ç—å –∫ docker-compose —Ñ–∞–π–ª—É
if [ -f "/opt/llm-bot/app/docker-compose.prod.yml" ] && [ -f "/opt/llm-bot/config/.env" ]; then
    COMPOSE_FILE="/opt/llm-bot/app/docker-compose.prod.yml"
    ENV_TYPE="Production"
elif [ -f "docker-compose.prod.yml" ] && [ -f "/opt/llm-bot/config/.env" ]; then
    COMPOSE_FILE="docker-compose.prod.yml"
    ENV_TYPE="Production"
elif [ -f "docker-compose.yml" ]; then
    COMPOSE_FILE="docker-compose.yml"
    ENV_TYPE="Development"
else
    echo -e "${RED}‚ùå Docker Compose —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω${NC}"
    echo "–î–æ—Å—Ç—É–ø–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã:"
    echo "- Development: docker-compose.yml"
    echo "- Production: docker-compose.prod.yml + /opt/llm-bot/config/.env"
    exit 1
fi

echo -e "${BLUE}üìÅ –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è: $ENV_TYPE ($COMPOSE_FILE)${NC}"
echo

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å PostgreSQL –Ω–∞–ø—Ä—è–º—É—é
echo -e "${BLUE}üîó –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ PostgreSQL...${NC}"
if docker-compose -f $COMPOSE_FILE exec postgres pg_isready -U postgres -q 2>/dev/null; then
    echo -e "${GREEN}‚úÖ PostgreSQL –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è–º${NC}"
else
    echo -e "${RED}‚ùå PostgreSQL –Ω–µ –≥–æ—Ç–æ–≤ –∫ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è–º${NC}"
    echo "–ü–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
echo -e "${BLUE}üóÑÔ∏è  –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ catalog_db...${NC}"
if docker-compose -f $COMPOSE_FILE exec postgres psql -U postgres -d catalog_db -c "SELECT version();" > /dev/null 2>&1; then
    echo -e "${GREEN}‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —Ä–∞–±–æ—Ç–∞–µ—Ç${NC}"
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤–µ—Ä—Å–∏—é PostgreSQL
    VERSION=$(docker-compose -f $COMPOSE_FILE exec postgres psql -U postgres -d catalog_db -t -c "SELECT version();" | head -1 | xargs)
    echo -e "${BLUE}üìã –í–µ—Ä—Å–∏—è: $VERSION${NC}"
    
else
    echo -e "${RED}‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö${NC}"
    echo
    echo -e "${YELLOW}üîß –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:${NC}"
    echo "1. –ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"
    echo "2. –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –µ—â–µ –Ω–µ —Å–æ–∑–¥–∞–Ω–∞"
    echo "3. –ü—Ä–æ–±–ª–µ–º—ã —Å –ø—Ä–∞–≤–∞–º–∏ –¥–æ—Å—Ç—É–ø–∞"
    echo
    echo -e "${BLUE}üìù –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤:${NC}"
    if [ "$ENV_TYPE" = "Production" ]; then
        echo "- /opt/llm-bot/config/.env"
    else
        echo "- .env —Ñ–∞–π–ª (–µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è)"
        echo "- docker-compose.yml"
    fi
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (–µ—Å–ª–∏ –∑–∞–ø—É—â–µ–Ω–æ)
echo -e "${BLUE}ü§ñ –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...${NC}"
if docker-compose -f $COMPOSE_FILE ps app | grep -q "Up"; then
    echo -e "${GREEN}‚úÖ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∑–∞–ø—É—â–µ–Ω${NC}"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º health endpoint
    sleep 2
    if curl -f http://localhost:8000/health > /dev/null 2>&1; then
        echo -e "${GREEN}‚úÖ Health check –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –ø—Ä–æ—à–µ–ª${NC}"
    else
        echo -e "${YELLOW}‚ö†Ô∏è  Health check –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –Ω–µ –ø—Ä–æ—à–µ–ª${NC}"
        echo "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: docker-compose -f $COMPOSE_FILE logs app"
    fi
else
    echo -e "${YELLOW}‚ö†Ô∏è  –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –Ω–µ –∑–∞–ø—É—â–µ–Ω${NC}"
fi

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
echo
echo -e "${BLUE}üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:${NC}"
TABLES_COUNT=$(docker-compose -f $COMPOSE_FILE exec postgres psql -U postgres -d catalog_db -t -c "SELECT count(*) FROM information_schema.tables WHERE table_schema = 'public';" 2>/dev/null | xargs)
DB_SIZE=$(docker-compose -f $COMPOSE_FILE exec postgres psql -U postgres -d catalog_db -t -c "SELECT pg_size_pretty(pg_database_size('catalog_db'));" 2>/dev/null | xargs)

if [ ! -z "$TABLES_COUNT" ]; then
    echo "- –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–∞–±–ª–∏—Ü: $TABLES_COUNT"
fi
if [ ! -z "$DB_SIZE" ]; then
    echo "- –†–∞–∑–º–µ—Ä –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: $DB_SIZE"
fi

echo
echo -e "${GREEN}üéâ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!${NC}"

# –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
echo
echo -e "${BLUE}üí° –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:${NC}"
echo "–ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ PostgreSQL:"
echo "  docker-compose -f $COMPOSE_FILE exec postgres psql -U postgres -d catalog_db"
echo
echo "–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ª–æ–≥–∏ PostgreSQL:"
echo "  docker-compose -f $COMPOSE_FILE logs postgres"
echo
echo "–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ª–æ–≥–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:"
echo "  docker-compose -f $COMPOSE_FILE logs app"
