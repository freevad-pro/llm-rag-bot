#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–∞—Ç–∞–ª–æ–≥–∞.
–°–æ–∑–¥–∞–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã–π Excel —Ñ–∞–π–ª –∏ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –∑–∞–≥—Ä—É–∑–∫—É —á–µ—Ä–µ–∑ API.
"""

import os
import sys
import pandas as pd
import requests
import time
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.append(str(Path(__file__).parent.parent))

BASE_URL = "http://localhost:8000"
TEST_DATA_DIR = Path("data/test_uploads")
TEST_DATA_DIR.mkdir(parents=True, exist_ok=True)

def create_test_excel():
    """–°–æ–∑–¥–∞–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã–π Excel —Ñ–∞–π–ª —Å –∫–∞—Ç–∞–ª–æ–≥–æ–º —Ç–æ–≤–∞—Ä–æ–≤"""
    print("üìù –°–æ–∑–¥–∞—é —Ç–µ—Å—Ç–æ–≤—ã–π Excel —Ñ–∞–π–ª...")
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —Å–æ–≥–ª–∞—Å–Ω–æ @product_idea.md
    test_products = [
        {
            "id": 1,
            "product name": "–ë–æ–ª—Ç –ú12x50 DIN 933",
            "description": "–ë–æ–ª—Ç —Å —à–µ—Å—Ç–∏–≥—Ä–∞–Ω–Ω–æ–π –≥–æ–ª–æ–≤–∫–æ–π, –ø–æ–ª–Ω–∞—è —Ä–µ–∑—å–±–∞, —Å—Ç–∞–ª—å –æ—Ü–∏–Ω–∫–æ–≤–∞–Ω–Ω–∞—è",
            "category 1": "–ö—Ä–µ–ø–µ–∂",
            "category 2": "–ë–æ–ª—Ç—ã",
            "category 3": "–®–µ—Å—Ç–∏–≥—Ä–∞–Ω–Ω—ã–µ",
            "article": "BOLT-M12-50-933",
            "photo_url": "https://example.com/bolt-m12.jpg",
            "page_url": "https://example.com/products/bolt-m12-50"
        },
        {
            "id": 2,
            "product name": "–ì–∞–π–∫–∞ –ú12 DIN 934",
            "description": "–ì–∞–π–∫–∞ —à–µ—Å—Ç–∏–≥—Ä–∞–Ω–Ω–∞—è, —Å—Ç–∞–ª—å –æ—Ü–∏–Ω–∫–æ–≤–∞–Ω–Ω–∞—è, –∫–ª–∞—Å—Å –ø—Ä–æ—á–Ω–æ—Å—Ç–∏ 8",
            "category 1": "–ö—Ä–µ–ø–µ–∂",
            "category 2": "–ì–∞–π–∫–∏",
            "category 3": "–®–µ—Å—Ç–∏–≥—Ä–∞–Ω–Ω—ã–µ",
            "article": "NUT-M12-934",
            "photo_url": "https://example.com/nut-m12.jpg",
            "page_url": ""
        },
        {
            "id": 3,
            "product name": "–®–∞–π–±–∞ –ú12 DIN 125",
            "description": "–®–∞–π–±–∞ –ø–ª–æ—Å–∫–∞—è, —Å—Ç–∞–ª—å –æ—Ü–∏–Ω–∫–æ–≤–∞–Ω–Ω–∞—è",
            "category 1": "–ö—Ä–µ–ø–µ–∂",
            "category 2": "–®–∞–π–±—ã",
            "category 3": "–ü–ª–æ—Å–∫–∏–µ",
            "article": "WASHER-M12-125",
            "photo_url": "",
            "page_url": "https://example.com/products/washer-m12"
        },
        {
            "id": 4,
            "product name": "–í–∏–Ω—Ç –ú8x25 DIN 7991",
            "description": "–í–∏–Ω—Ç —Å –ø–æ—Ç–∞–π–Ω–æ–π –≥–æ–ª–æ–≤–∫–æ–π –ø–æ–¥ —à–µ—Å—Ç–∏–≥—Ä–∞–Ω–Ω–∏–∫, —Å—Ç–∞–ª—å –Ω–µ—Ä–∂–∞–≤–µ—é—â–∞—è A2",
            "category 1": "–ö—Ä–µ–ø–µ–∂",
            "category 2": "–í–∏–Ω—Ç—ã",
            "category 3": "–ü–æ—Ç–∞–π–Ω—ã–µ",
            "article": "SCREW-M8-25-7991",
            "photo_url": "https://example.com/screw-m8.jpg",
            "page_url": "https://example.com/products/screw-m8-25"
        },
        {
            "id": 5,
            "product name": "–ü–æ–¥—à–∏–ø–Ω–∏–∫ 6205-2RS",
            "description": "–ü–æ–¥—à–∏–ø–Ω–∏–∫ —à–∞—Ä–∏–∫–æ–≤—ã–π —Ä–∞–¥–∏–∞–ª—å–Ω—ã–π –æ–¥–Ω–æ—Ä—è–¥–Ω—ã–π —Å –∑–∞—â–∏—Ç–Ω—ã–º–∏ —à–∞–π–±–∞–º–∏",
            "category 1": "–ü–æ–¥—à–∏–ø–Ω–∏–∫–∏",
            "category 2": "–®–∞—Ä–∏–∫–æ–≤—ã–µ",
            "category 3": "–†–∞–¥–∏–∞–ª—å–Ω—ã–µ",
            "article": "BEARING-6205-2RS",
            "photo_url": "https://example.com/bearing-6205.jpg",
            "page_url": "https://example.com/products/bearing-6205"
        }
    ]
    
    # –°–æ–∑–¥–∞–µ–º DataFrame
    df = pd.DataFrame(test_products)
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ Excel
    test_file = TEST_DATA_DIR / "test_catalog_small.xlsx"
    df.to_excel(test_file, index=False)
    
    print(f"‚úÖ –°–æ–∑–¥–∞–Ω —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª: {test_file}")
    print(f"   –¢–æ–≤–∞—Ä–æ–≤: {len(test_products)}")
    print(f"   –†–∞–∑–º–µ—Ä: {test_file.stat().st_size / 1024:.1f} KB")
    
    return test_file

def create_admin_user():
    """–°–æ–∑–¥–∞–µ—Ç —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"""
    print("üë§ –°–æ–∑–¥–∞—é —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞...")
    
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Å–∫—Ä–∏–ø—Ç
    script_path = Path("scripts/init_admin_users.py")
    if script_path.exists():
        os.system(f"python {script_path}")
        print("‚úÖ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —Å–æ–∑–¥–∞–Ω")
    else:
        print("‚ö†Ô∏è  –°–∫—Ä–∏–ø—Ç —Å–æ–∑–¥–∞–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω")

def login_admin():
    """–ê–≤—Ç–æ—Ä–∏–∑—É–µ—Ç—Å—è –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏"""
    print("üîê –ê–≤—Ç–æ—Ä–∏–∑—É—é—Å—å –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏...")
    
    session = requests.Session()
    
    # –ü–æ–ª—É—á–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤—Ö–æ–¥–∞
    login_page = session.get(f"{BASE_URL}/admin/login")
    if login_page.status_code != 200:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã –≤—Ö–æ–¥–∞: {login_page.status_code}")
        return None
    
    # –ê–≤—Ç–æ—Ä–∏–∑—É–µ–º—Å—è
    login_data = {
        "username": "admin",
        "password": "admin123"
    }
    
    login_response = session.post(f"{BASE_URL}/admin/login", data=login_data)
    
    if login_response.status_code == 200 and "/admin/" in login_response.url:
        print("‚úÖ –£—Å–ø–µ—à–Ω–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è")
        return session
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: {login_response.status_code}")
        print(f"   URL: {login_response.url}")
        return None

def test_catalog_upload_page(session):
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∑–∞–≥—Ä—É–∑–∫–∏ –∫–∞—Ç–∞–ª–æ–≥–∞"""
    print("üìÑ –ü—Ä–æ–≤–µ—Ä—è—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –∑–∞–≥—Ä—É–∑–∫–∏ –∫–∞—Ç–∞–ª–æ–≥–∞...")
    
    response = session.get(f"{BASE_URL}/admin/catalog/upload")
    
    if response.status_code == 200:
        print("‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–æ—Å—Ç—É–ø–Ω–∞")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–ª—é—á–µ–≤—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
        content = response.text
        checks = [
            ("—Ñ–æ—Ä–º–∞ –∑–∞–≥—Ä—É–∑–∫–∏", 'enctype="multipart/form-data"' in content),
            ("–ø–æ–ª–µ —Ñ–∞–π–ª–∞", 'type="file"' in content),
            ("–≤–∞–ª–∏–¥–∞—Ü–∏—è", 'accept=".xlsx,.xls"' in content),
            ("—Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è", "–û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –∫–æ–ª–æ–Ω–∫–∏" in content)
        ]
        
        for check_name, check_result in checks:
            status = "‚úÖ" if check_result else "‚ùå"
            print(f"   {status} {check_name}")
        
        return True
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ —Å—Ç—Ä–∞–Ω–∏—Ü–µ: {response.status_code}")
        return False

def test_catalog_upload(session, test_file):
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∑–∞–≥—Ä—É–∑–∫—É Excel —Ñ–∞–π–ª–∞"""
    print("üì§ –¢–µ—Å—Ç–∏—Ä—É—é –∑–∞–≥—Ä—É–∑–∫—É Excel —Ñ–∞–π–ª–∞...")
    
    # –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º —Ñ–∞–π–ª –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏
    with open(test_file, 'rb') as f:
        files = {'file': (test_file.name, f, 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet')}
        data = {
            'schedule_type': 'immediate'
        }
        
        response = session.post(f"{BASE_URL}/admin/catalog/upload", files=files, data=data)
    
    if response.status_code == 200:
        print("‚úÖ –§–∞–π–ª —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± —É—Å–ø–µ—Ö–µ
        if "–§–∞–π–ª –∑–∞–≥—Ä—É–∂–µ–Ω" in response.text or "—É—Å–ø–µ—à–Ω–æ" in response.text:
            print("‚úÖ –ü–æ–ª—É—á–µ–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏")
            return True
        else:
            print("‚ö†Ô∏è  –ù–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –≤ –æ—Ç–≤–µ—Ç–µ")
            return False
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞: {response.status_code}")
        print(f"   –û—Ç–≤–µ—Ç: {response.text[:200]}...")
        return False

def test_catalog_status(session):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—Ç–∞—Ç—É—Å –∏–Ω–¥–µ–∫—Å–∞—Ü–∏–∏"""
    print("üìä –ü—Ä–æ–≤–µ—Ä—è—é —Å—Ç–∞—Ç—É—Å –∏–Ω–¥–µ–∫—Å–∞—Ü–∏–∏...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å—Ç–∞—Ç—É—Å–∞
    response = session.get(f"{BASE_URL}/admin/catalog/status")
    
    if response.status_code == 200:
        print("‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ —Å—Ç–∞—Ç—É—Å–∞ –¥–æ—Å—Ç—É–ø–Ω–∞")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º API —Å—Ç–∞—Ç—É—Å–∞
        api_response = session.get(f"{BASE_URL}/admin/catalog/status/api")
        
        if api_response.status_code == 200:
            status_data = api_response.json()
            print(f"‚úÖ API —Å—Ç–∞—Ç—É—Å–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç")
            print(f"   –°—Ç–∞—Ç—É—Å: {status_data.get('status', 'unknown')}")
            print(f"   –ü—Ä–æ–≥—Ä–µ—Å—Å: {status_data.get('progress', 0)}%")
            print(f"   –¢–æ–≤–∞—Ä–æ–≤: {status_data.get('products_count', 0)}")
            
            return status_data
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ API —Å—Ç–∞—Ç—É—Å–∞: {api_response.status_code}")
            return None
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ —Å—Ç—Ä–∞–Ω–∏—Ü–µ —Å—Ç–∞—Ç—É—Å–∞: {response.status_code}")
        return None

def test_catalog_history(session):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∏—Å—Ç–æ—Ä–∏—é –≤–µ—Ä—Å–∏–π –∫–∞—Ç–∞–ª–æ–≥–∞"""
    print("üìö –ü—Ä–æ–≤–µ—Ä—è—é –∏—Å—Ç–æ—Ä–∏—é –≤–µ—Ä—Å–∏–π –∫–∞—Ç–∞–ª–æ–≥–∞...")
    
    response = session.get(f"{BASE_URL}/admin/catalog/history")
    
    if response.status_code == 200:
        print("‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∏—Å—Ç–æ—Ä–∏–∏ –¥–æ—Å—Ç—É–ø–Ω–∞")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ –≤ –∏—Å—Ç–æ—Ä–∏–∏
        content = response.text
        if "test_catalog_small.xlsx" in content:
            print("‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–π —Ñ–∞–π–ª –Ω–∞–π–¥–µ–Ω –≤ –∏—Å—Ç–æ—Ä–∏–∏")
            return True
        else:
            print("‚ö†Ô∏è  –ó–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–π —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –∏—Å—Ç–æ—Ä–∏–∏")
            return False
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –∏—Å—Ç–æ—Ä–∏–∏: {response.status_code}")
        return False

def wait_for_indexing(session, max_wait=60):
    """–ñ–¥–µ—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∏–Ω–¥–µ–∫—Å–∞—Ü–∏–∏"""
    print("‚è≥ –ñ–¥—É –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∏–Ω–¥–µ–∫—Å–∞—Ü–∏–∏...")
    
    start_time = time.time()
    
    while time.time() - start_time < max_wait:
        status_data = test_catalog_status(session)
        
        if status_data:
            status = status_data.get('status', 'unknown')
            progress = status_data.get('progress', 0)
            
            if status == 'completed':
                print("‚úÖ –ò–Ω–¥–µ–∫—Å–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
                return True
            elif status == 'failed':
                print("‚ùå –ò–Ω–¥–µ–∫—Å–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å —Å –æ—à–∏–±–∫–æ–π")
                return False
            elif status == 'processing':
                print(f"   –ü—Ä–æ–≥—Ä–µ—Å—Å: {progress}%")
            
        time.sleep(2)
    
    print("‚è∞ –ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –∏–Ω–¥–µ–∫—Å–∞—Ü–∏–∏")
    return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üß™ –ù–∞—á–∏–Ω–∞—é —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–∞—Ç–∞–ª–æ–≥–∞")
    print("=" * 60)
    
    try:
        # 1. –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π Excel —Ñ–∞–π–ª
        test_file = create_test_excel()
        
        # 2. –°–æ–∑–¥–∞–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
        create_admin_user()
        
        # 3. –ê–≤—Ç–æ—Ä–∏–∑—É–µ–º—Å—è
        session = login_admin()
        if not session:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è. –ó–∞–≤–µ—Ä—à–∞—é —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ.")
            return False
        
        # 4. –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –∑–∞–≥—Ä—É–∑–∫–∏
        if not test_catalog_upload_page(session):
            print("‚ùå –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞. –ó–∞–≤–µ—Ä—à–∞—é —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ.")
            return False
        
        # 5. –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∞–π–ª
        if not test_catalog_upload(session, test_file):
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª. –ó–∞–≤–µ—Ä—à–∞—é —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ.")
            return False
        
        # 6. –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∏–Ω–¥–µ–∫—Å–∞—Ü–∏–∏
        if not wait_for_indexing(session):
            print("‚ö†Ô∏è  –ò–Ω–¥–µ–∫—Å–∞—Ü–∏—è –Ω–µ –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å –≤ –æ–∂–∏–¥–∞–µ–º–æ–µ –≤—Ä–µ–º—è")
        
        # 7. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏—Å—Ç–æ—Ä–∏—é
        test_catalog_history(session)
        
        print("=" * 60)
        print("‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤–æ –≤—Ä–µ–º—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
        import traceback
        traceback.print_exc()
        return False

if __name__ == "__main__":
    success = main()
    sys.exit(0 if success else 1)


