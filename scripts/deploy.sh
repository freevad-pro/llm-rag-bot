#!/bin/bash
# –°–∫—Ä–∏–ø—Ç –ø–µ—Ä–≤–∏—á–Ω–æ–≥–æ –¥–µ–ø–ª–æ—è –ò–ò-–±–æ—Ç–∞ –Ω–∞ VPS
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./scripts/deploy.sh

set -e  # –í—ã—Ö–æ–¥ –ø—Ä–∏ –ª—é–±–æ–π –æ—à–∏–±–∫–µ

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    echo -e "${BLUE}[$(date +'%Y-%m-%d %H:%M:%S')]${NC} $1"
}

error() {
    echo -e "${RED}[ERROR]${NC} $1"
    exit 1
}

success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–∫—Ä–∏–ø—Ç –∑–∞–ø—É—â–µ–Ω –Ω–µ –æ—Ç root
if [ "$EUID" -eq 0 ]; then
    error "–ù–µ –∑–∞–ø—É—Å–∫–∞–π—Ç–µ —Å–∫—Ä–∏–ø—Ç –æ—Ç root! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –æ–±—ã—á–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å sudo –ø—Ä–∞–≤–∞–º–∏."
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö –∫–æ–º–∞–Ω–¥
command -v docker >/dev/null 2>&1 || error "Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!"
command -v docker-compose >/dev/null 2>&1 || error "Docker Compose –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!"
command -v git >/dev/null 2>&1 || error "Git –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!"

log "üöÄ –ù–∞—á–∏–Ω–∞–µ–º –ø–µ—Ä–≤–∏—á–Ω—ã–π –¥–µ–ø–ª–æ–π –ò–ò-–±–æ—Ç–∞..."

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
BOT_DIR="/opt/llm-bot"
APP_DIR="$BOT_DIR/app"
DATA_DIR="$BOT_DIR/data"
CONFIG_DIR="$BOT_DIR/config"
SCRIPTS_DIR="$BOT_DIR/scripts"

log "üìÅ –°–æ–∑–¥–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π..."

# –°–æ–∑–¥–∞–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
sudo mkdir -p $BOT_DIR/{app,data/{postgres,chroma,uploads,logs},config,scripts,backups}

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞
sudo chown -R $USER:$USER $BOT_DIR
chmod 755 $BOT_DIR

success "‚úÖ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å–æ–∑–¥–∞–Ω—ã"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω –ª–∏ —É–∂–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
if [ -d "$APP_DIR/.git" ]; then
    log "üì• –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π..."
    cd $APP_DIR
    git pull origin main
else
    log "üì• –ö–ª–æ–Ω–∏—Ä—É–µ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π..."
    
    # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º URL —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è –µ—Å–ª–∏ –æ–Ω –Ω–µ –∑–∞–¥–∞–Ω
    if [ -z "$REPO_URL" ]; then
        echo -n "–í–≤–µ–¥–∏—Ç–µ URL –≤–∞—à–µ–≥–æ Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è: "
        read REPO_URL
    fi
    
    if [ -z "$REPO_URL" ]; then
        error "URL —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º!"
    fi
    
    git clone $REPO_URL $APP_DIR
    cd $APP_DIR
fi

success "‚úÖ –ö–æ–¥ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –ø–æ–ª—É—á–µ–Ω"

log "‚öôÔ∏è –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ .env —Ñ–∞–π–ª–∞
if [ ! -f "$CONFIG_DIR/.env" ]; then
    if [ -f "$APP_DIR/env.production" ]; then
        log "üìã –ü–µ—Ä–µ–º–µ—â–∞–µ–º —à–∞–±–ª–æ–Ω –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –≤ config/..."
        mv $APP_DIR/env.production $CONFIG_DIR/.env
        success "‚úÖ –§–∞–π–ª .env –ø–µ—Ä–µ–º–µ—â–µ–Ω –≤ $CONFIG_DIR/.env"
        warning "‚ö†Ô∏è  –í–ê–ñ–ù–û: –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ —Ñ–∞–π–ª $CONFIG_DIR/.env –∏ –∑–∞–º–µ–Ω–∏—Ç–µ –≤—Å–µ PLACEHOLDER –∑–Ω–∞—á–µ–Ω–∏—è!"
        warning "‚ö†Ô∏è  –ü–æ—Å–ª–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–ø—É—Å—Ç–∏—Ç–µ: $APP_DIR/scripts/deploy.sh"
        
        echo
        echo "–û—Å–Ω–æ–≤–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:"
        echo "- BOT_TOKEN (–æ—Ç @BotFather)"
        echo "- POSTGRES_PASSWORD (—Å–∏–ª—å–Ω—ã–π –ø–∞—Ä–æ–ª—å –¥–ª—è –ë–î)"
        echo "- DEFAULT_LLM_PROVIDER (yandex –∏–ª–∏ openai)"
        echo "- –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ API –∫–ª—é—á–∏"
        echo "- MANAGER_TELEGRAM_CHAT_ID –∏ ADMIN_TELEGRAM_IDS"
        echo
        
        exit 0
    else
        error "–§–∞–π–ª env.production –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏!"
    fi
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞
if grep -q "–ó–ê–ú–ï–ù–ò–¢–ï_–ù–ê_" "$CONFIG_DIR/.env"; then
    error "‚ùå –í —Ñ–∞–π–ª–µ $CONFIG_DIR/.env –æ—Å—Ç–∞–ª–∏—Å—å –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã! –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ —Ñ–∞–π–ª –∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –∑–∞–Ω–æ–≤–æ."
fi

success "‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞"

log "üèóÔ∏è –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º Docker Compose –¥–ª—è production..."

# –ö–æ–ø–∏—Ä—É–µ–º production –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
if [ ! -f "$APP_DIR/docker-compose.prod.yml" ]; then
    if [ -f "docker-compose.prod.yml" ]; then
        cp docker-compose.prod.yml $APP_DIR/
    else
        error "–§–∞–π–ª docker-compose.prod.yml –Ω–µ –Ω–∞–π–¥–µ–Ω!"
    fi
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é Docker Compose
cd $APP_DIR
docker-compose -f docker-compose.prod.yml config > /dev/null
success "‚úÖ Docker Compose –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –≤–∞–ª–∏–¥–Ω–∞"

log "üì¶ –°–æ–∑–¥–∞–µ–º Docker –æ–±—Ä–∞–∑—ã..."
docker-compose -f docker-compose.prod.yml build

success "‚úÖ Docker –æ–±—Ä–∞–∑—ã —Å–æ–∑–¥–∞–Ω—ã"

log "üóÑÔ∏è –ó–∞–ø—É—Å–∫–∞–µ–º PostgreSQL..."
docker-compose -f docker-compose.prod.yml up -d postgres

# –ñ–¥–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ PostgreSQL
log "‚è≥ –û–∂–∏–¥–∞–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ PostgreSQL..."
for i in {1..30}; do
    if docker-compose -f docker-compose.prod.yml exec postgres pg_isready -U postgres -q; then
        success "‚úÖ PostgreSQL –≥–æ—Ç–æ–≤"
        break
    fi
    if [ $i -eq 30 ]; then
        error "‚ùå PostgreSQL –Ω–µ —Å—Ç–∞—Ä—Ç–æ–≤–∞–ª –∑–∞ 30 —Å–µ–∫—É–Ω–¥"
    fi
    sleep 1
done

log "üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ..."
docker-compose -f docker-compose.prod.yml up -d app

# –ñ–¥–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
log "‚è≥ –û–∂–∏–¥–∞–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
for i in {1..60}; do
    if curl -f http://localhost:8000/health > /dev/null 2>&1; then
        success "‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≥–æ—Ç–æ–≤–æ"
        break
    fi
    if [ $i -eq 60 ]; then
        error "‚ùå –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ —Å—Ç–∞—Ä—Ç–æ–≤–∞–ª–æ –∑–∞ 60 —Å–µ–∫—É–Ω–¥. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: docker-compose -f docker-compose.prod.yml logs app"
    fi
    sleep 1
done

log "üìã –ö–æ–ø–∏—Ä—É–µ–º —Å–∫—Ä–∏–ø—Ç—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è..."
cp $APP_DIR/scripts/*.sh $SCRIPTS_DIR/
chmod +x $SCRIPTS_DIR/*.sh

log "‚è∞ –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º cron –∑–∞–¥–∞—á–∏..."
# –î–æ–±–∞–≤–ª—è–µ–º backup –∑–∞–¥–∞—á—É –≤ crontab –µ—Å–ª–∏ –µ—ë –µ—â–µ –Ω–µ—Ç
if ! crontab -l 2>/dev/null | grep -q "$SCRIPTS_DIR/backup.sh"; then
    (crontab -l 2>/dev/null; echo "0 3 * * 0 $SCRIPTS_DIR/backup.sh >> $DATA_DIR/logs/backup.log 2>&1") | crontab -
    success "‚úÖ Backup –∑–∞–¥–∞—á–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ cron (–∫–∞–∂–¥–æ–µ –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ –≤ 3:00)"
fi

log "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤..."
docker-compose -f docker-compose.prod.yml ps

log "üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏..."

# –¢–µ—Å—Ç health endpoint
if curl -f http://localhost:8000/health > /dev/null 2>&1; then
    success "‚úÖ Health check –ø—Ä–æ—à–µ–ª"
else
    error "‚ùå Health check –Ω–µ –ø—Ä–æ—à–µ–ª"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î
if docker-compose -f docker-compose.prod.yml exec postgres psql -U postgres -d catalog_db -c "SELECT 1;" > /dev/null 2>&1; then
    success "‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î —Ä–∞–±–æ—Ç–∞–µ—Ç"
else
    error "‚ùå –ù–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –ë–î"
fi

success "üéâ –ü–µ—Ä–≤–∏—á–Ω—ã–π –¥–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!"

echo
echo "=== –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –î–ï–ü–õ–û–ï ==="
echo "üìÅ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: $APP_DIR"
echo "‚öôÔ∏è  –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è: $CONFIG_DIR/.env"
echo "üíæ –î–∞–Ω–Ω—ã–µ: $DATA_DIR"
echo "üìú –°–∫—Ä–∏–ø—Ç—ã: $SCRIPTS_DIR"
echo
echo "=== –ü–û–õ–ï–ó–ù–´–ï –ö–û–ú–ê–ù–î–´ ==="
echo "–ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤: docker-compose -f $APP_DIR/docker-compose.prod.yml logs -f"
echo "–°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤: docker-compose -f $APP_DIR/docker-compose.prod.yml ps"
echo "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ: $SCRIPTS_DIR/update.sh"
echo "Backup: $SCRIPTS_DIR/backup.sh"
echo "–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫: docker-compose -f $APP_DIR/docker-compose.prod.yml restart"
echo
echo "=== –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò ==="
echo "1. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –±–æ—Ç–∞ –≤ Telegram"
echo "2. –ó–∞–≥—Ä—É–∑–∏—Ç–µ –∫–∞—Ç–∞–ª–æ–≥ —Ç–æ–≤–∞—Ä–æ–≤ —á–µ—Ä–µ–∑ –∞–¥–º–∏–Ω–∫—É: http://YOUR_SERVER_IP:8000"
echo "3. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ nginx –¥–ª—è HTTPS (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)"
echo "4. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥"
echo

warning "‚ö†Ô∏è  –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —Å–æ—Ö—Ä–∞–Ω–∏—Ç–µ —Ñ–∞–π–ª $CONFIG_DIR/.env - –æ–Ω —Å–æ–¥–µ—Ä–∂–∏—Ç –≤—Å–µ –ø–∞—Ä–æ–ª–∏ –∏ –∫–ª—é—á–∏!"
