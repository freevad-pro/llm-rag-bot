#!/bin/bash
# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ production –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./scripts/prod_status.sh

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
GREEN='\033[0;32m'
BLUE='\033[0;34m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
NC='\033[0m'

log() {
    echo -e "${BLUE}[$(date +'%H:%M:%S')]${NC} $1"
}

success() {
    echo -e "${GREEN}‚úÖ${NC} $1"
}

error() {
    echo -e "${RED}‚ùå${NC} $1"
}

warning() {
    echo -e "${YELLOW}‚ö†Ô∏è${NC} $1"
}

echo "üìä –°—Ç–∞—Ç—É—Å –ò–ò-–±–æ—Ç–∞ –≤ production..."

# –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ —Ä–∞–±–æ—á—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
cd /opt/llm-bot/app

echo
echo "=== DOCKER –ö–û–ù–¢–ï–ô–ù–ï–†–´ ==="
docker-compose -f docker-compose.prod.yml ps

echo
echo "=== –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–ï –†–ï–°–£–†–°–û–í ==="
docker stats --no-stream --format "table {{.Container}}\t{{.CPUPerc}}\t{{.MemUsage}}\t{{.NetIO}}" $(docker-compose -f docker-compose.prod.yml ps -q) 2>/dev/null || echo "–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –Ω–µ –∑–∞–ø—É—â–µ–Ω—ã"

echo
echo "=== –ü–†–û–í–ï–†–ö–ê –î–û–°–¢–£–ü–ù–û–°–¢–ò ==="

# –ü—Ä–æ–≤–µ—Ä–∫–∞ health endpoint
log "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ health endpoint..."
if curl -s http://localhost:8000/health > /dev/null; then
    HEALTH_DATA=$(curl -s http://localhost:8000/health)
    success "Health endpoint –¥–æ—Å—Ç—É–ø–µ–Ω"
    echo "$HEALTH_DATA" | python3 -m json.tool 2>/dev/null || echo "$HEALTH_DATA"
else
    error "Health endpoint –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
fi

echo
echo "=== –ü–†–û–í–ï–†–ö–ê –ü–û–†–¢–û–í ==="
log "üîç –û—Ç–∫—Ä—ã—Ç—ã–µ –ø–æ—Ä—Ç—ã..."
ss -tlnp | grep ":8000" && success "–ü–æ—Ä—Ç 8000 –æ—Ç–∫—Ä—ã—Ç" || warning "–ü–æ—Ä—Ç 8000 –Ω–µ –Ω–∞–π–¥–µ–Ω"

echo
echo "=== –õ–û–ì–ò (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 5 —Å—Ç—Ä–æ–∫) ==="
echo "--- APP ---"
docker-compose -f docker-compose.prod.yml logs app 2>/dev/null | tail -5 || echo "–õ–æ–≥–∏ app –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã"

echo "--- BOT ---" 
docker-compose -f docker-compose.prod.yml logs bot 2>/dev/null | tail -5 || echo "–õ–æ–≥–∏ bot –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã"

echo "--- POSTGRES ---"
docker-compose -f docker-compose.prod.yml logs postgres 2>/dev/null | tail -5 || echo "–õ–æ–≥–∏ postgres –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã"

echo
echo "=== –î–ò–°–ö–û–í–û–ï –ü–†–û–°–¢–†–ê–ù–°–¢–í–û ==="
log "üíæ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –¥–∏—Å–∫–∞ –≤ /opt/llm-bot..."
du -sh /opt/llm-bot/* 2>/dev/null || warning "–ù–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –¥–∏—Å–∫–µ"

echo
echo "=== –ö–û–ú–ê–ù–î–´ –î–õ–Ø –£–ü–†–ê–í–õ–ï–ù–ò–Ø ==="
echo "–ó–∞–ø—É—Å–∫:      /opt/llm-bot/scripts/start_production.sh"
echo "–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫:  /opt/llm-bot/scripts/prod_restart.sh"  
echo "–û—Å—Ç–∞–Ω–æ–≤–∫–∞:   /opt/llm-bot/scripts/prod_stop.sh"
echo "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ:  /opt/llm-bot/scripts/update.sh"
echo "–õ–æ–≥–∏:        docker-compose -f /opt/llm-bot/app/docker-compose.prod.yml logs -f"

success "üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
