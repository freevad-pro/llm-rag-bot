#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –¥–µ—Ñ–æ–ª—Ç–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏ –≤ –ë–î.
–ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã classification_settings.
"""

import asyncio
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞ –≤ –ø—É—Ç—å
sys.path.insert(0, os.path.join(os.path.dirname(__file__), '..'))

from sqlalchemy.ext.asyncio import AsyncSession
from src.infrastructure.database.connection import get_session
from src.infrastructure.services.classification_settings_service import classification_settings_service


async def init_default_classification_settings():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –¥–µ—Ñ–æ–ª—Ç–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏ –≤ –ë–î."""
    print("üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–µ—Ñ–æ–ª—Ç–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏...")
    
    async with get_session() as session:
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –∞–∫—Ç–∏–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
            existing_settings = await classification_settings_service.get_active_settings(session)
            
            if existing_settings and existing_settings.get("id"):
                print(f"‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç (ID: {existing_settings['id']})")
                print("   –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é.")
                return
            
            print("üìù –°–æ–∑–¥–∞–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏...")
            
            # –°–æ–∑–¥–∞–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
            default_settings = await classification_settings_service.create_settings(
                session=session,
                enable_fast_classification=True,
                enable_llm_classification=True,
                product_keywords=[
                    "—Ç–æ–≤–∞—Ä", "product", "–æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ", "equipment", 
                    "–∑–∞–ø—á–∞—Å—Ç—å", "part", "spare", "–¥–µ—Ç–∞–ª—å", "detail",
                    "–∞—Ä—Ç–∏–∫—É–ª", "article", "sku", "–º–æ–¥–µ–ª—å", "model"
                ],
                contact_keywords=[
                    "–º–µ–Ω–µ–¥–∂–µ—Ä", "manager", "—Å–≤—è–∑–∞—Ç—å—Å—è", "contact", 
                    "–ø–æ–∑–≤–æ–Ω–∏—Ç—å", "call", "–∑–∞–∫–∞–∑–∞—Ç—å", "order", 
                    "–∫—É–ø–∏—Ç—å", "buy", "—Ü–µ–Ω–∞", "price", "–∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è", 
                    "consultation", "–ø–æ–º–æ—â—å –º–µ–Ω–µ–¥–∂–µ—Ä–∞", "manager help"
                ],
                company_keywords=[
                    "–∫–æ–º–ø–∞–Ω–∏—è", "company", "–æ –≤–∞—Å", "about you", 
                    "–∞–¥—Ä–µ—Å", "address", "–∫–æ–Ω—Ç–∞–∫—Ç—ã", "contacts", 
                    "–∏—Å—Ç–æ—Ä–∏—è", "history", "–º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ", "location"
                ],
                availability_phrases=[
                    "–µ—Å—Ç—å –ª–∏ —É –≤–∞—Å", "do you have", "–ø—Ä–æ–¥–∞–µ—Ç–µ –ª–∏", "do you sell",
                    "–Ω–∞–π–¥–µ—Ç—Å—è –ª–∏", "can be found", "–∏–º–µ–µ—Ç—Å—è –ª–∏", "is available",
                    "—É –≤–∞—Å –µ—Å—Ç—å", "you have", "–≤ –Ω–∞–ª–∏—á–∏–∏", "in stock",
                    "–µ—Å—Ç—å –≤ –Ω–∞–ª–∏—á–∏–∏", "available in stock", "–º–æ–∂–Ω–æ –ª–∏ –∫—É–ø–∏—Ç—å", 
                    "can I buy", "–º–æ–∂–Ω–æ –ª–∏ –∑–∞–∫–∞–∑–∞—Ç—å", "can I order"
                ],
                search_words=[
                    "–Ω–∞–π—Ç–∏", "find", "–∏—Å–∫–∞—Ç—å", "search", "–Ω—É–∂–µ–Ω", "need", 
                    "—Ç—Ä–µ–±—É–µ—Ç—Å—è", "required", "looking for", "–∏—â—É"
                ],
                specific_products=[
                    "—Å–≤–µ—Ä–ª–æ", "drill", "bit", "–∫–µ—Ä–Ω", "core",
                    "–±–æ–ª—Ç", "–≤–∏–Ω—Ç", "–≥–∞–π–∫–∞", "—à–∞–π–±–∞", "nut", "bolt", "screw", "washer",
                    "–ø–æ–¥—à–∏–ø–Ω–∏–∫", "bearing", "—Ñ–∏–ª—å—Ç—Ä", "filter", "–º–∞—Å–ª–æ", "oil",
                    "—Ä–µ–º–µ–Ω—å", "belt", "–Ω–∞—Å–æ—Å", "pump", "–¥–≤–∏–≥–∞—Ç–µ–ª—å", "motor", "engine",
                    "–∫–æ–º–ø—Ä–µ—Å—Å–æ—Ä", "compressor", "–∫–ª–∞–ø–∞–Ω", "valve", "—à–ª–∞–Ω–≥", "hose",
                    "–∫–∞–±–µ–ª—å", "cable", "wire", "–ø—Ä–æ–≤–æ–¥", "–ø—Ä–æ–≤–æ–¥–∞"
                ],
                description="–î–µ—Ñ–æ–ª—Ç–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏ (–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞–Ω—ã)",
                created_by_admin_id=1,  # –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ admin —Å ID=1 —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
                is_active=True
            )
            
            print(f"‚úÖ –î–µ—Ñ–æ–ª—Ç–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏ —Å–æ–∑–¥–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
            print(f"   ID: {default_settings.id}")
            print(f"   –ê–∫—Ç–∏–≤–Ω—ã: {default_settings.is_active}")
            print(f"   –ë—ã—Å—Ç—Ä–∞—è –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è: {default_settings.enable_fast_classification}")
            print(f"   LLM –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è: {default_settings.enable_llm_classification}")
            print(f"   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤: {len(default_settings.specific_products.split(','))}")
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –¥–µ—Ñ–æ–ª—Ç–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫: {e}")
            raise


if __name__ == "__main__":
    asyncio.run(init_default_classification_settings())
