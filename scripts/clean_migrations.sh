#!/bin/bash
# –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–æ–ª–Ω–æ–π –æ—á–∏—Å—Ç–∫–∏ –∏ –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏—è –º–∏–≥—Ä–∞—Ü–∏–π Alembic
# –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø—Ä–∏ –ø—Ä–æ–±–ª–µ–º–∞—Ö —Å multiple heads –∏–ª–∏ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–∞—Ö –º–∏–≥—Ä–∞—Ü–∏–π
# –í–ù–ò–ú–ê–ù–ò–ï: –£–¥–∞–ª—è–µ—Ç –í–°–ï –¥–∞–Ω–Ω—ã–µ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö!

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
BLUE='\033[0;34m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m'

log() {
    echo -e "${BLUE}[$(date +'%H:%M:%S')]${NC} $1"
}

success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

error() {
    echo -e "${RED}‚ùå $1${NC}"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
FORCE=false
if [ "$1" = "--force" ]; then
    FORCE=true
fi

log "üîÑ –°–∫—Ä–∏–ø—Ç –ø–æ–ª–Ω–æ–π –æ—á–∏—Å—Ç–∫–∏ –º–∏–≥—Ä–∞—Ü–∏–π Alembic"
echo
warning "‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç —É–¥–∞–ª–∏—Ç –í–°–ï –¥–∞–Ω–Ω—ã–µ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö!"
warning "‚ö†Ô∏è  –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –ø—Ä–æ–±–ª–µ–º–∞—Ö —Å –º–∏–≥—Ä–∞—Ü–∏—è–º–∏!"
echo

if [ "$FORCE" != "true" ]; then
    read -p "–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å? –í–≤–µ–¥–∏—Ç–µ 'YES' –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: " confirm
    if [ "$confirm" != "YES" ]; then
        log "–û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º"
        exit 0
    fi
fi

# –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ —Ä–∞–±–æ—á—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
cd /opt/llm-bot/app

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
if [ ! -f "docker-compose.prod.yml" ]; then
    error "–§–∞–π–ª docker-compose.prod.yml –Ω–µ –Ω–∞–π–¥–µ–Ω. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏."
    exit 1
fi

log "üì¶ –°–æ–∑–¥–∞–µ–º backup —Ç–µ–∫—É—â–∏—Ö –º–∏–≥—Ä–∞—Ü–∏–π..."
backup_dir="migrations_backup_$(date +%Y%m%d_%H%M%S)"
mkdir -p "$backup_dir"

# –ö–æ–ø–∏—Ä—É–µ–º —Ñ–∞–π–ª—ã –º–∏–≥—Ä–∞—Ü–∏–π –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å
if [ -d "src/infrastructure/database/migrations/versions" ]; then
    cp -r src/infrastructure/database/migrations/versions "$backup_dir/"
    success "Backup –º–∏–≥—Ä–∞—Ü–∏–π —Å–æ–∑–¥–∞–Ω –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏: $backup_dir"
else
    log "–ü–∞–ø–∫–∞ —Å –º–∏–≥—Ä–∞—Ü–∏—è–º–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º backup"
fi

log "‚èπÔ∏è –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã..."
docker-compose -f docker-compose.prod.yml down

log "üóëÔ∏è –£–¥–∞–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ PostgreSQL..."
if [ -d "/opt/llm-bot/data/postgres" ]; then
    rm -rf /opt/llm-bot/data/postgres/*
    success "–î–∞–Ω–Ω—ã–µ PostgreSQL —É–¥–∞–ª–µ–Ω—ã"
else
    warning "–ü–∞–ø–∫–∞ —Å –¥–∞–Ω–Ω—ã–º–∏ PostgreSQL –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
fi

log "üóëÔ∏è –£–¥–∞–ª—è–µ–º —Ñ–∞–π–ª—ã –º–∏–≥—Ä–∞—Ü–∏–π..."
if [ -d "src/infrastructure/database/migrations/versions" ]; then
    rm -rf src/infrastructure/database/migrations/versions/*
    success "–§–∞–π–ª—ã –º–∏–≥—Ä–∞—Ü–∏–π —É–¥–∞–ª–µ–Ω—ã"
else
    warning "–ü–∞–ø–∫–∞ —Å –º–∏–≥—Ä–∞—Ü–∏—è–º–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
fi

log "üîß –ü—Ä–æ–≤–µ—Ä—è–µ–º alembic.ini..."
if [ ! -f "alembic.ini" ]; then
    error "–§–∞–π–ª alembic.ini –Ω–µ –Ω–∞–π–¥–µ–Ω!"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –ø—É—Ç–∏ –≤ alembic.ini
script_location=$(grep "script_location" alembic.ini | cut -d'=' -f2 | tr -d ' ')
if [ "$script_location" != "src/infrastructure/database/migrations" ]; then
    warning "–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø—É—Ç—å –≤ alembic.ini: $script_location"
    warning "–û–∂–∏–¥–∞–µ—Ç—Å—è: src/infrastructure/database/migrations"
fi

log "üèóÔ∏è –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–∏—Å—ã..."
docker-compose -f docker-compose.prod.yml up -d

log "‚è≥ –û–∂–∏–¥–∞–µ–º –∑–∞–ø—É—Å–∫–∞ PostgreSQL..."
sleep 15

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Å–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—Å—Ç–∏–ª–∏—Å—å
if ! docker-compose -f docker-compose.prod.yml ps | grep -q "Up"; then
    error "–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–∏—Å—ã"
    exit 1
fi

success "–°–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ"

log "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —á–∏—Å—Ç–æ—Ç—É –º–∏–≥—Ä–∞—Ü–∏–π..."
# –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ø–∞–ø–∫–∞ versions –ø—É—Å—Ç–∞—è
if [ -d "src/infrastructure/database/migrations/versions" ]; then
    file_count=$(ls -1 src/infrastructure/database/migrations/versions/ 2>/dev/null | wc -l)
    if [ "$file_count" -eq 0 ]; then
        success "–ü–∞–ø–∫–∞ versions –ø—É—Å—Ç–∞"
    else
        warning "–í –ø–∞–ø–∫–µ versions –æ—Å—Ç–∞–ª–∏—Å—å —Ñ–∞–π–ª—ã: $file_count"
    fi
fi

log "üìù –°–æ–∑–¥–∞–µ–º –Ω–∞—á–∞–ª—å–Ω—É—é –º–∏–≥—Ä–∞—Ü–∏—é..."
# –°–æ–∑–¥–∞–µ–º –ø—É—Å—Ç—É—é –Ω–∞—á–∞–ª—å–Ω—É—é –º–∏–≥—Ä–∞—Ü–∏—é
if docker-compose -f docker-compose.prod.yml exec app alembic revision -m "initial" > /dev/null 2>&1; then
    success "–ù–∞—á–∞–ª—å–Ω–∞—è –º–∏–≥—Ä–∞—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞"
else
    error "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –Ω–∞—á–∞–ª—å–Ω—É—é –º–∏–≥—Ä–∞—Ü–∏—é"
    exit 1
fi

log "üè∑Ô∏è –ü–æ–º–µ—á–∞–µ–º –ë–î –Ω–∞—á–∞–ª—å–Ω–æ–π –≤–µ—Ä—Å–∏–µ–π..."
# –ü–æ–º–µ—á–∞–µ–º –ë–î —ç—Ç–æ–π –≤–µ—Ä—Å–∏–µ–π (—Ç–∞–±–ª–∏—Ü—ã —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç)
if docker-compose -f docker-compose.prod.yml exec app alembic stamp head > /dev/null 2>&1; then
    success "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–º–µ—á–µ–Ω–∞ –Ω–∞—á–∞–ª—å–Ω–æ–π –≤–µ—Ä—Å–∏–µ–π"
else
    error "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–º–µ—Ç–∏—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö"
    exit 1
fi

log "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç..."
# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â—É—é –≤–µ—Ä—Å–∏—é
current_version=$(docker-compose -f docker-compose.prod.yml exec app alembic current 2>/dev/null | grep -o '[a-f0-9]\{12\}' | head -1)
if [ -n "$current_version" ]; then
    success "–¢–µ–∫—É—â–∞—è –≤–µ—Ä—Å–∏—è –º–∏–≥—Ä–∞—Ü–∏–∏: $current_version"
else
    warning "–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ç–µ–∫—É—â—É—é –≤–µ—Ä—Å–∏—é –º–∏–≥—Ä–∞—Ü–∏–∏"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—É alembic_version
if docker-compose -f docker-compose.prod.yml exec postgres psql -U postgres -d catalog_db -c "SELECT * FROM alembic_version;" > /dev/null 2>&1; then
    success "–¢–∞–±–ª–∏—Ü–∞ alembic_version —Å–æ–∑–¥–∞–Ω–∞ –∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∞"
else
    warning "–ü—Ä–æ–±–ª–µ–º—ã —Å —Ç–∞–±–ª–∏—Ü–µ–π alembic_version"
fi

echo
success "üéâ –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–π –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!"
echo
log "üìã –ß—Ç–æ –±—ã–ª–æ —Å–¥–µ–ª–∞–Ω–æ:"
echo "   ‚úÖ –°–æ–∑–¥–∞–Ω backup —Å—Ç–∞—Ä—ã—Ö –º–∏–≥—Ä–∞—Ü–∏–π –≤: $backup_dir"
echo "   ‚úÖ –û—á–∏—â–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ PostgreSQL"
echo "   ‚úÖ –£–¥–∞–ª–µ–Ω—ã —Å—Ç–∞—Ä—ã–µ —Ñ–∞–π–ª—ã –º–∏–≥—Ä–∞—Ü–∏–π"
echo "   ‚úÖ –°–æ–∑–¥–∞–Ω–∞ –Ω–æ–≤–∞—è –Ω–∞—á–∞–ª—å–Ω–∞—è –º–∏–≥—Ä–∞—Ü–∏—è"
echo "   ‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–º–µ—á–µ–Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –≤–µ—Ä—Å–∏–µ–π"
echo
log "üöÄ –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ:"
echo "   ‚Ä¢ –°–æ–∑–¥–∞–≤–∞—Ç—å –Ω–æ–≤—ã–µ –º–∏–≥—Ä–∞—Ü–∏–∏: alembic revision --autogenerate -m 'description'"
echo "   ‚Ä¢ –ü—Ä–∏–º–µ–Ω—è—Ç—å –º–∏–≥—Ä–∞—Ü–∏–∏: alembic upgrade head"
echo "   ‚Ä¢ –ü—Ä–æ–≤–µ—Ä—è—Ç—å —Å—Ç–∞—Ç—É—Å: alembic current"
echo
warning "üìÅ Backup —Å—Ç–∞—Ä—ã—Ö –º–∏–≥—Ä–∞—Ü–∏–π —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤: $backup_dir"
echo
log "‚úÖ –ì–æ—Ç–æ–≤–æ –∫ —Ä–∞–±–æ—Ç–µ!"
