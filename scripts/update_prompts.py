#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ–º–ø—Ç–æ–≤ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –ò–ò-–±–æ—Ç–∞.
–ò—Å–ø–æ–ª—å–∑—É–µ—Ç —É–ª—É—á—à–µ–Ω–Ω—ã–µ –ø—Ä–æ–º–ø—Ç—ã –∏–∑ improved_prompts.py
"""
import asyncio
import sys
import os
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–µ–Ω—å –ø—Ä–æ–µ–∫—Ç–∞ –≤ –ø—É—Ç—å –¥–ª—è –∏–º–ø–æ—Ä—Ç–æ–≤
project_root = Path(__file__).parent.parent
sys.path.insert(0, str(project_root))

try:
    from sqlalchemy.ext.asyncio import create_async_engine, AsyncSession
    from sqlalchemy.orm import sessionmaker
    
    # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –ø—Ä–æ–µ–∫—Ç–∞
    from src.infrastructure.llm.services.prompt_manager import prompt_manager
    from src.infrastructure.llm.services.improved_prompts import get_all_improved_prompts
    from src.config.settings import Settings
except ImportError as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
    print("–£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –∑–∞–ø—É—Å–∫–∞–µ—Ç–µ —Å–∫—Ä–∏–ø—Ç –∏–∑ –∫–æ—Ä–Ω–µ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞")
    print("–ü—Ä–∏–º–µ—Ä: python scripts/update_prompts.py update")
    sys.exit(1)


async def update_all_prompts():
    """–û–±–Ω–æ–≤–ª—è–µ—Ç –≤—Å–µ –ø—Ä–æ–º–ø—Ç—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö."""
    
    print("üöÄ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–º–ø—Ç–æ–≤ –ò–ò-–±–æ—Ç–∞ KeTai Consulting")
    print("=" * 50)
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    settings = Settings()
    
    # –°–æ–∑–¥–∞–µ–º –¥–≤–∏–∂–æ–∫ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    engine = create_async_engine(
        settings.database_url,
        echo=False  # –û—Ç–∫–ª—é—á–∞–µ–º –ª–∏—à–Ω–∏–µ –ª–æ–≥–∏
    )
    
    # –°–æ–∑–¥–∞–µ–º —Å–µ—Å—Å–∏—é
    AsyncSessionLocal = sessionmaker(
        bind=engine, 
        class_=AsyncSession, 
        expire_on_commit=False
    )
    
    try:
        async with AsyncSessionLocal() as session:
            # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —É–ª—É—á—à–µ–Ω–Ω—ã–µ –ø—Ä–æ–º–ø—Ç—ã
            improved_prompts = get_all_improved_prompts()
            
            print(f"üìã –ù–∞–π–¥–µ–Ω–æ {len(improved_prompts)} —É–ª—É—á—à–µ–Ω–Ω—ã—Ö –ø—Ä–æ–º–ø—Ç–æ–≤")
            print()
            
            success_count = 0
            error_count = 0
            
            for prompt_name, prompt_content in improved_prompts.items():
                try:
                    print(f"üîÑ –û–±–Ω–æ–≤–ª—è—é –ø—Ä–æ–º–ø—Ç: {prompt_name}")
                    
                    # –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ–º–ø—Ç –≤ –ë–î
                    success = await prompt_manager.update_prompt(
                        name=prompt_name,
                        content=prompt_content,
                        session=session
                    )
                    
                    if success:
                        print(f"‚úÖ –ü—Ä–æ–º–ø—Ç '{prompt_name}' —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω")
                        success_count += 1
                    else:
                        print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ–º–ø—Ç–∞ '{prompt_name}'")
                        error_count += 1
                        
                except Exception as e:
                    print(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ '{prompt_name}': {e}")
                    error_count += 1
                
                print()
            
            # –û—á–∏—â–∞–µ–º –∫—ç—à –ø—Ä–æ–º–ø—Ç–æ–≤ –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π
            prompt_manager.clear_cache()
            print("üßπ –ö—ç—à –ø—Ä–æ–º–ø—Ç–æ–≤ –æ—á–∏—â–µ–Ω")
            print()
            
            # –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
            print("üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:")
            print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ: {success_count}")
            print(f"‚ùå –û—à–∏–±–æ–∫: {error_count}")
            print(f"üìù –í—Å–µ–≥–æ –ø—Ä–æ–º–ø—Ç–æ–≤: {len(improved_prompts)}")
            
            if error_count == 0:
                print("\nüéâ –í—Å–µ –ø—Ä–æ–º–ø—Ç—ã —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã!")
            else:
                print(f"\n‚ö†Ô∏è  –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —Å {error_count} –æ—à–∏–±–∫–∞–º–∏")
            
    except Exception as e:
        print(f"üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        return False
    
    finally:
        await engine.dispose()
    
    return error_count == 0


async def list_current_prompts():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–µ–∫—É—â–∏–µ –ø—Ä–æ–º–ø—Ç—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö."""
    
    print("üìã –¢–µ–∫—É—â–∏–µ –ø—Ä–æ–º–ø—Ç—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
    print("=" * 40)
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    settings = Settings()
    
    # –°–æ–∑–¥–∞–µ–º –¥–≤–∏–∂–æ–∫ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    engine = create_async_engine(
        settings.database_url,
        echo=False
    )
    
    # –°–æ–∑–¥–∞–µ–º —Å–µ—Å—Å–∏—é
    AsyncSessionLocal = sessionmaker(
        bind=engine, 
        class_=AsyncSession, 
        expire_on_commit=False
    )
    
    try:
        async with AsyncSessionLocal() as session:
            # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø—Ä–æ–º–ø—Ç–æ–≤
            prompts_info = await prompt_manager.list_prompts(session)
            
            if not prompts_info:
                print("‚ùå –ü—Ä–æ–º–ø—Ç—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
                return
            
            for prompt_name, info in prompts_info.items():
                print(f"üìù {prompt_name}")
                print(f"   –í–µ—Ä—Å–∏—è: {info['version']}")
                print(f"   –ê–∫—Ç–∏–≤–µ–Ω: {info['active']}")
                print(f"   –û–±–Ω–æ–≤–ª–µ–Ω: {info['updated_at'] or '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}")
                print(f"   –ü—Ä–µ–≤—å—é: {info['content_preview']}")
                print()
    
    except Exception as e:
        print(f"üí• –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ–º–ø—Ç–æ–≤: {e}")
    
    finally:
        await engine.dispose()


async def show_prompt_diff(prompt_name: str):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ä–∞–∑–Ω–∏—Ü—É –º–µ–∂–¥—É —Ç–µ–∫—É—â–∏–º –∏ —É–ª—É—á—à–µ–Ω–Ω—ã–º –ø—Ä–æ–º–ø—Ç–æ–º."""
    
    print(f"üîç –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –ø—Ä–æ–º–ø—Ç–∞: {prompt_name}")
    print("=" * 50)
    
    # –ü–æ–ª—É—á–∞–µ–º —É–ª—É—á—à–µ–Ω–Ω—ã–π –ø—Ä–æ–º–ø—Ç
    improved_prompts = get_all_improved_prompts()
    if prompt_name not in improved_prompts:
        print(f"‚ùå –£–ª—É—á—à–µ–Ω–Ω—ã–π –ø—Ä–æ–º–ø—Ç '{prompt_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return
    
    new_prompt = improved_prompts[prompt_name]
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    settings = Settings()
    
    # –°–æ–∑–¥–∞–µ–º –¥–≤–∏–∂–æ–∫ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    engine = create_async_engine(
        settings.database_url,
        echo=False
    )
    
    # –°–æ–∑–¥–∞–µ–º —Å–µ—Å—Å–∏—é
    AsyncSessionLocal = sessionmaker(
        bind=engine, 
        class_=AsyncSession, 
        expire_on_commit=False
    )
    
    try:
        async with AsyncSessionLocal() as session:
            # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π –ø—Ä–æ–º–ø—Ç
            current_prompt = await prompt_manager.get_prompt(prompt_name, session)
            
            print("üìÑ –¢–ï–ö–£–©–ò–ô –ü–†–û–ú–ü–¢:")
            print("-" * 30)
            print(current_prompt[:500] + ("..." if len(current_prompt) > 500 else ""))
            print()
            
            print("‚ú® –£–õ–£–ß–®–ï–ù–ù–´–ô –ü–†–û–ú–ü–¢:")
            print("-" * 30)
            print(new_prompt[:500] + ("..." if len(new_prompt) > 500 else ""))
            print()
            
            print(f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
            print(f"   –¢–µ–∫—É—â–∞—è –¥–ª–∏–Ω–∞: {len(current_prompt)} —Å–∏–º–≤–æ–ª–æ–≤")
            print(f"   –ù–æ–≤–∞—è –¥–ª–∏–Ω–∞: {len(new_prompt)} —Å–∏–º–≤–æ–ª–æ–≤")
            print(f"   –ò–∑–º–µ–Ω–µ–Ω–∏–µ: {len(new_prompt) - len(current_prompt):+d} —Å–∏–º–≤–æ–ª–æ–≤")
    
    except Exception as e:
        print(f"üí• –û—à–∏–±–∫–∞ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –ø—Ä–æ–º–ø—Ç–∞: {e}")
    
    finally:
        await engine.dispose()


def print_help():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø—Ä–∞–≤–∫—É –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é —Å–∫—Ä–∏–ø—Ç–∞."""
    print("""
ü§ñ –°–∫—Ä–∏–ø—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ–º–ø—Ç–æ–≤ –ò–ò-–±–æ—Ç–∞ KeTai Consulting

–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
    python scripts/update_prompts.py [–∫–æ–º–∞–Ω–¥–∞] [–ø–∞—Ä–∞–º–µ—Ç—Ä—ã]

–ö–æ–º–∞–Ω–¥—ã:
    update          –û–±–Ω–æ–≤–∏—Ç—å –≤—Å–µ –ø—Ä–æ–º–ø—Ç—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    list           –ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–µ –ø—Ä–æ–º–ø—Ç—ã –≤ –ë–î
    diff <name>    –ü–æ–∫–∞–∑–∞—Ç—å —Ä–∞–∑–Ω–∏—Ü—É –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø—Ä–æ–º–ø—Ç–∞
    help           –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É

–ü—Ä–∏–º–µ—Ä—ã:
    python scripts/update_prompts.py update
    python scripts/update_prompts.py list
    python scripts/update_prompts.py diff system_prompt

–î–æ—Å—Ç—É–ø–Ω—ã–µ –ø—Ä–æ–º–ø—Ç—ã –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:
    - system_prompt (–æ—Å–Ω–æ–≤–Ω–æ–π —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç)
    - product_search_prompt (–ø–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–æ–≤)
    - pricing_inquiry_prompt (–∑–∞–ø—Ä–æ—Å—ã –æ —Ü–µ–Ω–∞—Ö)
    - welcome_prompt (–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ)
    - technical_clarification_prompt (—Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —É—Ç–æ—á–Ω–µ–Ω–∏—è)
    - objection_handling_prompt (—Ä–∞–±–æ—Ç–∞ —Å –≤–æ–∑—Ä–∞–∂–µ–Ω–∏—è–º–∏)
    - lead_qualification_prompt (–∫–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏—è –ª–∏–¥–æ–≤)
    - service_answer_prompt (–æ—Ç–≤–µ—Ç—ã –æ–± —É—Å–ª—É–≥–∞—Ö)
    - general_conversation_prompt (–æ–±—â–∏–π –¥–∏–∞–ª–æ–≥)
    - company_info_prompt (–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–º–ø–∞–Ω–∏–∏)
    - error_handling_prompt (–æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫)
    - conversation_closing_prompt (–∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –¥–∏–∞–ª–æ–≥–∞)

–ü–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º —É–±–µ–¥–∏—Ç–µ—Å—å:
    - –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∑–∞–ø—É—â–µ–Ω–∞
    - –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã
    - –ù–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –∫–æ—Ä–Ω–µ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞
""")


async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Å–∫—Ä–∏–ø—Ç–∞."""
    
    if len(sys.argv) < 2:
        print_help()
        return
    
    command = sys.argv[1].lower()
    
    if command == "update":
        await update_all_prompts()
    elif command == "list":
        await list_current_prompts()
    elif command == "diff":
        if len(sys.argv) < 3:
            print("‚ùå –£–∫–∞–∂–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–º–ø—Ç–∞ –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è")
            print("–ü—Ä–∏–º–µ—Ä: python scripts/update_prompts.py diff system_prompt")
            return
        prompt_name = sys.argv[2]
        await show_prompt_diff(prompt_name)
    elif command == "help":
        print_help()
    else:
        print(f"‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: {command}")
        print("–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ 'help' –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏")


if __name__ == "__main__":
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –º—ã –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    if not Path("src").exists() or not Path("scripts").exists():
        print("‚ùå –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –∏–∑ –∫–æ—Ä–Ω–µ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞")
        print("–ü—Ä–∏–º–µ—Ä: python scripts/update_prompts.py update")
        sys.exit(1)
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –æ—Å–Ω–æ–≤–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
    asyncio.run(main())
