#!/bin/bash
# –°–∫—Ä–∏–ø—Ç –º–∏–≥—Ä–∞—Ü–∏–∏ –∫–∞—Ç–∞–ª–æ–≥–∞ –Ω–∞ –≤–µ—Ä—Å–∏—é 2.1 (—Ç—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏)
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./scripts/migrate_catalog_v21.sh

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m'

log() {
    echo -e "${BLUE}[CATALOG MIGRATION]${NC} $1"
}

success() {
    echo -e "${GREEN}‚úÖ${NC} $1"
}

warning() {
    echo -e "${YELLOW}‚ö†Ô∏è${NC} $1"
}

error() {
    echo -e "${RED}‚ùå${NC} $1"
}

echo "üîÑ –ú–∏–≥—Ä–∞—Ü–∏—è –∫–∞—Ç–∞–ª–æ–≥–∞ –Ω–∞ –≤–µ—Ä—Å–∏—é 2.1.0 (—Ç—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏)"
echo "=================================================="
echo

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –º—ã –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
if [ ! -f "docker-compose.prod.yml" ]; then
    if [ -d "/opt/llm-bot/app" ]; then
        cd /opt/llm-bot/app
    else
        error "–ù–µ –Ω–∞–π–¥–µ–Ω —Ñ–∞–π–ª docker-compose.prod.yml. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –∏–∑ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è."
        exit 1
    fi
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤
log "–ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤..."
if ! docker-compose -f docker-compose.prod.yml ps | grep -q "Up"; then
    error "–°–µ—Ä–≤–∏—Å—ã –Ω–µ –∑–∞–ø—É—â–µ–Ω—ã! –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–Ω–∞—á–∞–ª–∞: ./scripts/prod.sh"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —É –Ω–∞—Å –µ—Å—Ç—å –Ω–æ–≤—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –ø–æ–∏—Å–∫–∞
log "–ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –ø–æ–∏—Å–∫–∞..."
if [ -f "/opt/llm-bot/config/.env" ]; then
    ENV_FILE="/opt/llm-bot/config/.env"
elif [ -f ".env" ]; then
    ENV_FILE=".env"
else
    error "–§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω!"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–æ–≤—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
missing_vars=0
for var in SEARCH_MIN_SCORE SEARCH_NAME_BOOST SEARCH_ARTICLE_BOOST SEARCH_MAX_RESULTS; do
    if ! grep -q "^${var}=" "$ENV_FILE"; then
        warning "–ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è $var –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"
        missing_vars=$((missing_vars + 1))
    fi
done

if [ $missing_vars -gt 0 ]; then
    warning "–û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –ø–æ–∏—Å–∫–∞."
    echo "–ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–Ω–∞—á–∞–ª–∞: ./scripts/check_env_search_settings.sh"
    echo "–ó–∞—Ç–µ–º –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–∏—Å—ã: ./scripts/prod_restart.sh"
    exit 1
fi

success "–í—Å–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –ø–æ–∏—Å–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â—É—é –≤–µ—Ä—Å–∏—é –∫–æ–¥–∞
log "–ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–µ—Ä—Å–∏—é –∫–æ–¥–∞..."
CURRENT_COMMIT=$(git rev-parse --short HEAD)
log "–¢–µ–∫—É—â–∞—è –≤–µ—Ä—Å–∏—è: $CURRENT_COMMIT"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ —É–∂–µ –∫–∞—Ç–∞–ª–æ–≥ –≤ –Ω–æ–≤–æ–º —Ñ–æ—Ä–º–∞—Ç–µ
log "–ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–π –∫–∞—Ç–∞–ª–æ–≥..."

# –î–µ–ª–∞–µ–º –∑–∞–ø—Ä–æ—Å –∫ API –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –∫–∞—Ç–∞–ª–æ–≥–∞
if curl -f http://localhost:8000/health > /dev/null 2>&1; then
    log "API –¥–æ—Å—Ç—É–ø–Ω–æ, –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∫–∞—Ç–∞–ª–æ–≥–∞..."
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ Chroma
    if docker-compose -f docker-compose.prod.yml exec -T app python -c "
import sys
sys.path.append('/app')
from src.infrastructure.search.catalog_service import CatalogSearchService
import asyncio

async def check_catalog():
    try:
        service = CatalogSearchService()
        is_indexed = await service.is_indexed()
        if is_indexed:
            print('CATALOG_EXISTS')
        else:
            print('CATALOG_EMPTY')
    except Exception as e:
        print(f'CATALOG_ERROR: {e}')

asyncio.run(check_catalog())
" 2>/dev/null; then
        catalog_status=$(docker-compose -f docker-compose.prod.yml exec -T app python -c "
import sys
sys.path.append('/app')
from src.infrastructure.search.catalog_service import CatalogSearchService
import asyncio

async def check_catalog():
    try:
        service = CatalogSearchService()
        is_indexed = await service.is_indexed()
        if is_indexed:
            print('CATALOG_EXISTS')
        else:
            print('CATALOG_EMPTY')
    except Exception as e:
        print(f'CATALOG_ERROR: {e}')

asyncio.run(check_catalog())
" 2>/dev/null | tr -d '\r')

        case "$catalog_status" in
            "CATALOG_EXISTS")
                warning "–ö–∞—Ç–∞–ª–æ–≥ —É–∂–µ –ø—Ä–æ–∏–Ω–¥–µ–∫—Å–∏—Ä–æ–≤–∞–Ω. –¢—Ä–µ–±—É–µ—Ç—Å—è –ø–µ—Ä–µ–∏–Ω–¥–µ–∫—Å–∞—Ü–∏—è —Å –Ω–æ–≤–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π."
                echo
                echo "–í–ù–ò–ú–ê–ù–ò–ï: –°—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∫–∞—Ç–∞–ª–æ–≥ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Å—Ç–∞—Ä—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É (–æ–¥–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è)."
                echo "–î–ª—è —Ä–∞–±–æ—Ç—ã —Å –≤–µ—Ä—Å–∏–µ–π 2.1 —Ç—Ä–µ–±—É–µ—Ç—Å—è –∫–∞—Ç–∞–ª–æ–≥ —Å —Ç—Ä–µ–º—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏:"
                echo "  - category 1 (–æ—Å–Ω–æ–≤–Ω–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è)"
                echo "  - category 2 (–ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—è)"  
                echo "  - category 3 (–¥–µ—Ç–∞–ª—å–Ω–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è)"
                echo
                echo "–ü–æ–¥–≥–æ—Ç–æ–≤—å—Ç–µ Excel —Ñ–∞–π–ª —Å –Ω–æ–≤–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π –∏ –∑–∞–≥—Ä—É–∑–∏—Ç–µ —á–µ—Ä–µ–∑ –∞–¥–º–∏–Ω–∫—É:"
                echo "  1. –û—Ç–∫—Ä–æ–π—Ç–µ http://$(hostname -I | awk '{print $1}'):8000"
                echo "  2. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ —Ä–∞–∑–¥–µ–ª '–ó–∞–≥—Ä—É–∑–∫–∞ –∫–∞—Ç–∞–ª–æ–≥–∞'"
                echo "  3. –ó–∞–≥—Ä—É–∑–∏—Ç–µ –Ω–æ–≤—ã–π —Ñ–∞–π–ª —Å –∫–æ–ª–æ–Ω–∫–∞–º–∏ category 1, category 2, category 3"
                ;;
            "CATALOG_EMPTY")
                success "–ö–∞—Ç–∞–ª–æ–≥ –ø—É—Å—Ç - –≥–æ—Ç–æ–≤ –∫ –∑–∞–≥—Ä—É–∑–∫–µ –Ω–æ–≤–æ–≥–æ —Ñ–∞–π–ª–∞"
                echo
                echo "–ó–∞–≥—Ä—É–∑–∏—Ç–µ –∫–∞—Ç–∞–ª–æ–≥ —Å –Ω–æ–≤–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π —á–µ—Ä–µ–∑ –∞–¥–º–∏–Ω–∫—É:"
                echo "  1. –û—Ç–∫—Ä–æ–π—Ç–µ http://$(hostname -I | awk '{print $1}'):8000"
                echo "  2. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ —Ä–∞–∑–¥–µ–ª '–ó–∞–≥—Ä—É–∑–∫–∞ –∫–∞—Ç–∞–ª–æ–≥–∞'"
                echo "  3. –ó–∞–≥—Ä—É–∑–∏—Ç–µ Excel —Ñ–∞–π–ª —Å –∫–æ–ª–æ–Ω–∫–∞–º–∏:"
                echo "     - category 1 (–æ—Å–Ω–æ–≤–Ω–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è)"
                echo "     - category 2 (–ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—è)"
                echo "     - category 3 (–¥–µ—Ç–∞–ª—å–Ω–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è)"
                ;;
            *)
                error "–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–∞—Ç–∞–ª–æ–≥–∞: $catalog_status"
                exit 1
                ;;
        esac
    else
        error "–ù–µ —É–¥–∞–µ—Ç—Å—è –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å –∫–∞—Ç–∞–ª–æ–≥–∞"
        exit 1
    fi
else
    error "API –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤: ./scripts/prod_status.sh"
    exit 1
fi

echo
log "–ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–±–æ—Ç—É –Ω–æ–≤–æ–≥–æ –ø–æ–∏—Å–∫–∞..."

# –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–∏—Å–∫–∞
echo "–¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–∏—Å–∫–∞:"
for var in SEARCH_MIN_SCORE SEARCH_NAME_BOOST SEARCH_ARTICLE_BOOST SEARCH_MAX_RESULTS; do
    value=$(grep "^${var}=" "$ENV_FILE" | cut -d'=' -f2)
    echo "  $var = $value"
done

echo
log "–ó–∞–ø—É—Å–∫–∞–µ–º smoke tests..."
if [ -f "/opt/llm-bot/scripts/smoke_tests.sh" ]; then
    /opt/llm-bot/scripts/smoke_tests.sh search
    if [ $? -eq 0 ]; then
        success "Smoke test –ø–æ–∏—Å–∫–∞ –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ"
    else
        warning "Smoke test –ø–æ–∏—Å–∫–∞ –Ω–µ –ø—Ä–æ—à–µ–ª - –≤–æ–∑–º–æ–∂–Ω–æ –∫–∞—Ç–∞–ª–æ–≥ –µ—â–µ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω"
    fi
else
    warning "Smoke tests –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
fi

echo
success "üéâ –ú–∏–≥—Ä–∞—Ü–∏—è –Ω–∞ –≤–µ—Ä—Å–∏—é 2.1.0 –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
echo
echo "=== –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò ==="
echo "1. ‚úÖ –ö–æ–¥ –æ–±–Ω–æ–≤–ª–µ–Ω –¥–æ v2.1.0"
echo "2. ‚úÖ –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –ø–æ–∏—Å–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã"
echo "3. üîÑ –ó–∞–≥—Ä—É–∑–∏—Ç–µ –Ω–æ–≤—ã–π –∫–∞—Ç–∞–ª–æ–≥ —á–µ—Ä–µ–∑ –∞–¥–º–∏–Ω–∫—É"
echo "4. üß™ –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –ø–æ–∏—Å–∫ –≤ Telegram –±–æ—Ç–µ"
echo
echo "=== –ù–û–í–´–ï –í–û–ó–ú–û–ñ–ù–û–°–¢–ò ==="
echo "‚Ä¢ –ò–µ—Ä–∞—Ä—Ö–∏—á–µ—Å–∫–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ (3 —É—Ä–æ–≤–Ω—è)"
echo "‚Ä¢ Boost –ø–æ –∞—Ä—Ç–∏–∫—É–ª—É (–ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç —Ç–æ—á–Ω—ã–º —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è–º)"
echo "‚Ä¢ –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–º—É score (–∫–∞—á–µ—Å—Ç–≤–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤)"
echo "‚Ä¢ –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ (UX)"
echo "‚Ä¢ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤—Å–µ—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ —á–µ—Ä–µ–∑ ENV –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ"
echo
echo "=== –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï ==="
echo "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–∏—Å–∫ –ø–æ —Ä–∞–∑–Ω—ã–º —Ç–∏–ø–∞–º –∑–∞–ø—Ä–æ—Å–æ–≤:"
echo "  ‚Ä¢ –ü–æ –Ω–∞–∑–≤–∞–Ω–∏—é: '–Ω–æ—É—Ç–±—É–∫', '–¥—Ä–µ–ª—å'"
echo "  ‚Ä¢ –ü–æ –∞—Ä—Ç–∏–∫—É–ª—É: 'DL001', 'FL002'"  
echo "  ‚Ä¢ –ü–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏: '—ç–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞', '–∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã'"
echo
warning "üìù –ü–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–∞—Ç–∞–ª–æ–≥–∞ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏"
