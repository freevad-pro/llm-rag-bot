# PowerShell —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ç–∞–±–ª–∏—Ü—ã conversations
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./scripts/check_conversations_table.ps1

Write-Host "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ç–∞–±–ª–∏—Ü—ã conversations" -ForegroundColor Blue
Write-Host ""

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—É—Ç—å –∫ docker-compose —Ñ–∞–π–ª—É
$ComposeFile = ""
$EnvType = ""

if ((Test-Path "/opt/llm-bot/app/docker-compose.prod.yml") -and (Test-Path "/opt/llm-bot/config/.env")) {
    $ComposeFile = "/opt/llm-bot/app/docker-compose.prod.yml"
    $EnvType = "Production"
} elseif ((Test-Path "docker-compose.prod.yml") -and (Test-Path "/opt/llm-bot/config/.env")) {
    $ComposeFile = "docker-compose.prod.yml"
    $EnvType = "Production"
} elseif (Test-Path "docker-compose.yml") {
    $ComposeFile = "docker-compose.yml"
    $EnvType = "Development"
} else {
    Write-Host "‚ùå Docker Compose —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω" -ForegroundColor Red
    exit 1
}

Write-Host "üìÅ –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è: $EnvType ($ComposeFile)" -ForegroundColor Blue
Write-Host ""

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ç–∞–±–ª–∏—Ü–∞ conversations
Write-Host "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã conversations..." -ForegroundColor Blue

try {
    $tableExists = docker-compose -f $ComposeFile exec postgres psql -U postgres -d catalog_db -t -c "SELECT EXISTS (SELECT FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'conversations');" 2>$null
    
    if ($LASTEXITCODE -eq 0) {
        $tableExistsClean = $tableExists.Trim()
        if ($tableExistsClean -eq "t") {
            Write-Host "‚úÖ –¢–∞–±–ª–∏—Ü–∞ conversations —Å—É—â–µ—Å—Ç–≤—É–µ—Ç" -ForegroundColor Green
        } else {
            Write-Host "‚ùå –¢–∞–±–ª–∏—Ü–∞ conversations –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç" -ForegroundColor Red
            exit 1
        }
    } else {
        Write-Host "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Ç–∞–±–ª–∏—Ü—ã" -ForegroundColor Red
        exit 1
    }
} catch {
    Write-Host "‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Ç–∞–±–ª–∏—Ü—ã" -ForegroundColor Red
    exit 1
}

# –ü–æ–ª—É—á–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã
Write-Host "üìã –ü–æ–ª—É—á–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã conversations..." -ForegroundColor Blue

try {
    $columns = docker-compose -f $ComposeFile exec postgres psql -U postgres -d catalog_db -t -c "SELECT column_name, data_type, is_nullable FROM information_schema.columns WHERE table_name = 'conversations' ORDER BY ordinal_position;" 2>$null
    
    if ($LASTEXITCODE -eq 0) {
        Write-Host ""
        Write-Host "üìã –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞–±–ª–∏—Ü—ã conversations:" -ForegroundColor Blue
        
        $columnLines = $columns -split "`n" | Where-Object { $_.Trim() -ne "" }
        $hasStartedAt = $false
        $hasCreatedAt = $false
        
        foreach ($line in $columnLines) {
            $line = $line.Trim()
            if ($line) {
                $parts = $line -split "\|"
                if ($parts.Length -ge 3) {
                    $columnName = $parts[0].Trim()
                    $dataType = $parts[1].Trim()
                    $isNullable = $parts[2].Trim()
                    
                    Write-Host "  - $columnName ($dataType) $isNullable"
                    
                    if ($columnName -eq "started_at") {
                        $hasStartedAt = $true
                    }
                    if ($columnName -eq "created_at") {
                        $hasCreatedAt = $true
                    }
                }
            }
        }
        
        Write-Host ""
        
        # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –ø—Ä–æ–±–ª–µ–º—É
        if ($hasStartedAt -and -not $hasCreatedAt) {
            Write-Host "‚ö†Ô∏è  –ü–†–û–ë–õ–ï–ú–ê –ù–ê–ô–î–ï–ù–ê!" -ForegroundColor Red
            Write-Host "–í —Ç–∞–±–ª–∏—Ü–µ –µ—Å—Ç—å –ø–æ–ª–µ 'started_at', –Ω–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å 'created_at'" -ForegroundColor Red
            Write-Host "–ù—É–∂–Ω–æ –ø—Ä–∏–º–µ–Ω–∏—Ç—å –º–∏–≥—Ä–∞—Ü–∏—é 008_rename_started_at_to_created_at" -ForegroundColor Yellow
            Write-Host ""
            Write-Host "üîß –†–µ—à–µ–Ω–∏–µ:" -ForegroundColor Blue
            Write-Host "docker-compose -f $ComposeFile exec web python -m alembic upgrade head"
        } elseif ($hasCreatedAt -and -not $hasStartedAt) {
            Write-Host "‚úÖ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞ - –ø–æ–ª–µ 'created_at' –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç" -ForegroundColor Green
        } elseif ($hasStartedAt -and $hasCreatedAt) {
            Write-Host "‚ö†Ô∏è  –í —Ç–∞–±–ª–∏—Ü–µ –µ—Å—Ç—å –∏ 'started_at' –∏ 'created_at' - –Ω—É–∂–Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞" -ForegroundColor Yellow
        } else {
            Write-Host "‚ùå –ù–∏ 'started_at', –Ω–∏ 'created_at' –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!" -ForegroundColor Red
        }
        
    } else {
        Write-Host "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ç–∞–±–ª–∏—Ü—ã" -ForegroundColor Red
    }
} catch {
    Write-Host "‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ç–∞–±–ª–∏—Ü—ã" -ForegroundColor Red
}

Write-Host ""
Write-Host "üéâ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!" -ForegroundColor Green
