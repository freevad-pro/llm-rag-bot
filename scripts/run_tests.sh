#!/bin/bash
# –°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Ç–µ—Å—Ç–æ–≤ –ò–ò-–±–æ—Ç–∞
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./scripts/run_tests.sh [—Ç–∏–ø_—Ç–µ—Å—Ç–æ–≤]

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m'

log() {
    echo -e "${BLUE}[TESTS]${NC} $1"
}

success() {
    echo -e "${GREEN}‚úÖ${NC} $1"
}

warning() {
    echo -e "${YELLOW}‚ö†Ô∏è${NC} $1"
}

error() {
    echo -e "${RED}‚ùå${NC} $1"
}

# –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞
cd "$(dirname "$0")/.."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ pytest
if ! command -v pytest &> /dev/null; then
    error "pytest –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω! –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: poetry install"
    exit 1
fi

# –§—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞–∑–∞ —Å–ø—Ä–∞–≤–∫–∏
show_help() {
    echo "üß™ –°–∫—Ä–∏–ø—Ç –∑–∞–ø—É—Å–∫–∞ —Ç–µ—Å—Ç–æ–≤ –ò–ò-–±–æ—Ç–∞"
    echo
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [—Ç–∏–ø_—Ç–µ—Å—Ç–æ–≤] [–æ–ø—Ü–∏–∏]"
    echo
    echo "–¢–∏–ø—ã —Ç–µ—Å—Ç–æ–≤:"
    echo "  all         - –í—Å–µ —Ç–µ—Å—Ç—ã (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)"
    echo "  unit        - –¢–æ–ª—å–∫–æ unit —Ç–µ—Å—Ç—ã (–±—ã—Å—Ç—Ä—ã–µ)"
    echo "  integration - –¢–æ–ª—å–∫–æ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ç–µ—Å—Ç—ã"
    echo "  e2e         - –¢–æ–ª—å–∫–æ E2E —Ç–µ—Å—Ç—ã (–º–µ–¥–ª–µ–Ω–Ω—ã–µ)"
    echo "  db          - –¢–æ–ª—å–∫–æ —Ç–µ—Å—Ç—ã –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"
    echo "  api         - –¢–æ–ª—å–∫–æ —Ç–µ—Å—Ç—ã API"
    echo "  telegram    - –¢–æ–ª—å–∫–æ —Ç–µ—Å—Ç—ã Telegram –±–æ—Ç–∞"
    echo "  llm         - –¢–æ–ª—å–∫–æ —Ç–µ—Å—Ç—ã LLM –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–≤"
    echo "  search      - –¢–æ–ª—å–∫–æ —Ç–µ—Å—Ç—ã –ø–æ–∏—Å–∫–∞"
    echo "  leads       - –¢–æ–ª—å–∫–æ —Ç–µ—Å—Ç—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ª–∏–¥–∞–º–∏"
    echo
    echo "–°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Ä–µ–∂–∏–º—ã:"
    echo "  fast        - –¢–æ–ª—å–∫–æ –±—ã—Å—Ç—Ä—ã–µ —Ç–µ—Å—Ç—ã (unit + –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ integration)"
    echo "  slow        - –¢–æ–ª—å–∫–æ –º–µ–¥–ª–µ–Ω–Ω—ã–µ —Ç–µ—Å—Ç—ã"
    echo "  coverage    - –ó–∞–ø—É—Å–∫ —Å –ø–æ–∫—Ä—ã—Ç–∏–µ–º –∫–æ–¥–∞"
    echo "  parallel    - –ü–∞—Ä–∞–ª–ª–µ–ª—å–Ω—ã–π –∑–∞–ø—É—Å–∫ (–±—ã—Å—Ç—Ä–µ–µ)"
    echo
    echo "–û–ø—Ü–∏–∏:"
    echo "  -v, --verbose    - –ü–æ–¥—Ä–æ–±–Ω—ã–π –≤—ã–≤–æ–¥"
    echo "  -x, --exitfirst  - –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–∞ –ø–µ—Ä–≤–æ–π –æ—à–∏–±–∫–µ"
    echo "  -k PATTERN       - –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –ø–æ –ø–∞—Ç—Ç–µ—Ä–Ω—É –∏–º–µ–Ω–∏"
    echo "  --html           - –ì–µ–Ω–µ—Ä–∞—Ü–∏—è HTML –æ—Ç—á–µ—Ç–∞"
    echo
    echo "–ü—Ä–∏–º–µ—Ä—ã:"
    echo "  $0 unit                 # –¢–æ–ª—å–∫–æ unit —Ç–µ—Å—Ç—ã"
    echo "  $0 integration -v       # –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ç–µ—Å—Ç—ã —Å –ø–æ–¥—Ä–æ–±–Ω—ã–º –≤—ã–≤–æ–¥–æ–º"
    echo "  $0 fast --html          # –ë—ã—Å—Ç—Ä—ã–µ —Ç–µ—Å—Ç—ã —Å HTML –æ—Ç—á–µ—Ç–æ–º"
    echo "  $0 -k test_lead         # –¢–µ—Å—Ç—ã —Å–æ–¥–µ—Ä–∂–∞—â–∏–µ 'test_lead'"
    echo
}

# –ü–æ–ª—É—á–∞–µ–º —Ç–∏–ø —Ç–µ—Å—Ç–æ–≤
TEST_TYPE=${1:-"all"}
shift || true  # –£–±–∏—Ä–∞–µ–º –ø–µ—Ä–≤—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç

# –ë–∞–∑–æ–≤—ã–µ –æ–ø—Ü–∏–∏ pytest
PYTEST_ARGS="-v --tb=short --disable-warnings"

# –î–æ–±–∞–≤–ª—è–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∞—Ä–≥—É–º–µ–Ω—Ç—ã
PYTEST_ARGS="$PYTEST_ARGS $@"

case $TEST_TYPE in
    "all")
        log "üöÄ –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤..."
        MARKERS=""
        ;;
    
    "unit")
        log "‚ö° –ó–∞–ø—É—Å–∫ unit —Ç–µ—Å—Ç–æ–≤..."
        MARKERS="-m unit"
        ;;
    
    "integration")
        log "üîó –ó–∞–ø—É—Å–∫ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤..."
        MARKERS="-m integration"
        ;;
    
    "e2e")
        log "üéØ –ó–∞–ø—É—Å–∫ E2E —Ç–µ—Å—Ç–æ–≤..."
        MARKERS="-m e2e"
        ;;
    
    "db")
        log "üóÑÔ∏è –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
        MARKERS="-m db"
        ;;
    
    "api")
        log "üåê –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ API..."
        MARKERS="-m api"
        ;;
    
    "telegram")
        log "üì± –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ Telegram –±–æ—Ç–∞..."
        MARKERS="-m telegram"
        ;;
    
    "llm")
        log "üß† –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ LLM –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–≤..."
        MARKERS="-m llm"
        ;;
    
    "search")
        log "üîç –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –ø–æ–∏—Å–∫–∞..."
        MARKERS="-m search"
        ;;
    
    "leads")
        log "üë• –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ª–∏–¥–∞–º–∏..."
        MARKERS="-m leads"
        ;;
    
    "fast")
        log "‚ö° –ó–∞–ø—É—Å–∫ –±—ã—Å—Ç—Ä—ã—Ö —Ç–µ—Å—Ç–æ–≤..."
        MARKERS="-m 'unit or (integration and not slow)'"
        ;;
    
    "slow")
        log "üêå –ó–∞–ø—É—Å–∫ –º–µ–¥–ª–µ–Ω–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤..."
        MARKERS="-m slow"
        ;;
    
    "coverage")
        log "üìä –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ —Å –ø–æ–∫—Ä—ã—Ç–∏–µ–º –∫–æ–¥–∞..."
        MARKERS=""
        PYTEST_ARGS="$PYTEST_ARGS --cov=src --cov-report=html --cov-report=term-missing"
        ;;
    
    "parallel")
        log "üöÄ –ü–∞—Ä–∞–ª–ª–µ–ª—å–Ω—ã–π –∑–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤..."
        MARKERS=""
        PYTEST_ARGS="$PYTEST_ARGS -n auto"
        ;;
    
    "help"|"-h"|"--help")
        show_help
        exit 0
        ;;
    
    *)
        error "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø —Ç–µ—Å—Ç–æ–≤: $TEST_TYPE"
        echo
        show_help
        exit 1
        ;;
esac

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ç–µ—Å—Ç–æ–≤
if [ ! -d "tests" ]; then
    error "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è tests –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!"
    exit 1
fi

# –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
log "–ö–æ–º–∞–Ω–¥–∞: pytest $PYTEST_ARGS $MARKERS tests/"
echo

START_TIME=$(date +%s)

if pytest $PYTEST_ARGS $MARKERS tests/; then
    END_TIME=$(date +%s)
    DURATION=$((END_TIME - START_TIME))
    
    success "–í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!"
    success "–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: ${DURATION} —Å–µ–∫—É–Ω–¥"
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
    if [[ "$PYTEST_ARGS" == *"--cov"* ]]; then
        echo
        log "üìä –û—Ç—á–µ—Ç –æ –ø–æ–∫—Ä—ã—Ç–∏–∏ —Å–æ–∑–¥–∞–Ω –≤ htmlcov/index.html"
    fi
    
    if [[ "$PYTEST_ARGS" == *"--html"* ]]; then
        echo
        log "üìÑ HTML –æ—Ç—á–µ—Ç —Å–æ–∑–¥–∞–Ω –≤ report.html"
    fi
    
else
    END_TIME=$(date +%s)
    DURATION=$((END_TIME - START_TIME))
    
    error "–ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–≤–∞–ª–∏–ª–∏—Å—å!"
    error "–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: ${DURATION} —Å–µ–∫—É–Ω–¥"
    
    echo
    warning "–î–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å –æ–ø—Ü–∏–µ–π -v"
    warning "–î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞ –ø–µ—Ä–≤–æ–π –æ—à–∏–±–∫–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ -x"
    
    exit 1
fi
