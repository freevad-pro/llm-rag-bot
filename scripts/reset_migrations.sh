#!/bin/bash
# –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–æ–ª–Ω–æ–π –æ—á–∏—Å—Ç–∫–∏ –∏ –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏—è –º–∏–≥—Ä–∞—Ü–∏–π Alembic
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./scripts/reset_migrations.sh

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

log() {
    echo -e "${BLUE}[$(date +'%Y-%m-%d %H:%M:%S')]${NC} $1"
}

error() {
    echo -e "${RED}[ERROR]${NC} $1"
    exit 1
}

success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

log "üîÑ –ù–∞—á–∏–Ω–∞–µ–º –ø–æ–ª–Ω—É—é –æ—á–∏—Å—Ç–∫—É –∏ –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
if [ ! -f "alembic.ini" ]; then
    error "–§–∞–π–ª alembic.ini –Ω–µ –Ω–∞–π–¥–µ–Ω! –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –∏–∑ –∫–æ—Ä–Ω—è –ø—Ä–æ–µ–∫—Ç–∞."
fi

# –°–æ–∑–¥–∞–µ–º backup —Ç–µ–∫—É—â–∏—Ö –º–∏–≥—Ä–∞—Ü–∏–π
log "üì¶ –°–æ–∑–¥–∞–µ–º backup —Ç–µ–∫—É—â–∏—Ö –º–∏–≥—Ä–∞—Ü–∏–π..."
BACKUP_DIR="migrations_backup_$(date +%Y%m%d_%H%M%S)"
mkdir -p "$BACKUP_DIR"
cp -r src/infrastructure/database/migrations/versions "$BACKUP_DIR/"
success "‚úÖ Backup —Å–æ–∑–¥–∞–Ω –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏: $BACKUP_DIR"

# –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
log "‚èπÔ∏è –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ..."
docker-compose -f docker-compose.prod.yml stop app || true

# –£–¥–∞–ª—è–µ–º —Ç–∞–±–ª–∏—Ü—É alembic_version –∏–∑ –ë–î (–µ—Å–ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ)
log "üóëÔ∏è –û—á–∏—â–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é –º–∏–≥—Ä–∞—Ü–∏–π –≤ –ë–î..."
if docker-compose -f docker-compose.prod.yml ps postgres | grep -q "Up"; then
    docker-compose -f docker-compose.prod.yml exec postgres psql -U postgres -d catalog_db -c "DROP TABLE IF EXISTS alembic_version CASCADE;" || true
    success "‚úÖ –¢–∞–±–ª–∏—Ü–∞ alembic_version —É–¥–∞–ª–µ–Ω–∞ –∏–∑ –ë–î"
else
    warning "‚ö†Ô∏è PostgreSQL –Ω–µ –∑–∞–ø—É—â–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –æ—á–∏—Å—Ç–∫—É –ë–î"
fi

# –£–¥–∞–ª—è–µ–º –≤—Å–µ —Ñ–∞–π–ª—ã –º–∏–≥—Ä–∞—Ü–∏–π
log "üóëÔ∏è –£–¥–∞–ª—è–µ–º –≤—Å–µ —Ñ–∞–π–ª—ã –º–∏–≥—Ä–∞—Ü–∏–π..."
rm -rf src/infrastructure/database/migrations/versions/*
success "‚úÖ –í—Å–µ —Ñ–∞–π–ª—ã –º–∏–≥—Ä–∞—Ü–∏–π —É–¥–∞–ª–µ–Ω—ã"

# –°–æ–∑–¥–∞–µ–º –Ω–∞—á–∞–ª—å–Ω—É—é –º–∏–≥—Ä–∞—Ü–∏—é —Å —Ç–µ–∫—É—â–∏–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º –º–æ–¥–µ–ª–µ–π
log "üèóÔ∏è –°–æ–∑–¥–∞–µ–º –Ω–∞—á–∞–ª—å–Ω—É—é –º–∏–≥—Ä–∞—Ü–∏—é —Å —Ç–µ–∫—É—â–∏–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º..."
docker-compose -f docker-compose.prod.yml run --rm app alembic revision --autogenerate -m "Initial migration with current schema"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º–∏–≥—Ä–∞—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞
MIGRATION_FILE=$(ls src/infrastructure/database/migrations/versions/ | head -1)
if [ -z "$MIGRATION_FILE" ]; then
    error "‚ùå –ù–∞—á–∞–ª—å–Ω–∞—è –º–∏–≥—Ä–∞—Ü–∏—è –Ω–µ –±—ã–ª–∞ —Å–æ–∑–¥–∞–Ω–∞!"
fi

log "üìù –°–æ–∑–¥–∞–Ω–∞ –º–∏–≥—Ä–∞—Ü–∏—è: $MIGRATION_FILE"

# –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤—ã–≤–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏—é –≤ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç
NEW_NAME="001_initial_migration.py"
mv "src/infrastructure/database/migrations/versions/$MIGRATION_FILE" "src/infrastructure/database/migrations/versions/$NEW_NAME"

# –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –º–∏–≥—Ä–∞—Ü–∏–∏ –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –Ω—É–º–µ—Ä–∞—Ü–∏–∏
log "üìù –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –º–∏–≥—Ä–∞—Ü–∏–∏..."
sed -i 's/revision = .*/revision = "001_initial_migration"/' "src/infrastructure/database/migrations/versions/$NEW_NAME"
sed -i 's/down_revision = .*/down_revision = None/' "src/infrastructure/database/migrations/versions/$NEW_NAME"

success "‚úÖ –ù–∞—á–∞–ª—å–Ω–∞—è –º–∏–≥—Ä–∞—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞: $NEW_NAME"

# –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
log "‚ñ∂Ô∏è –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ..."
docker-compose -f docker-compose.prod.yml up -d

# –ñ–¥–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏
log "‚è≥ –û–∂–∏–¥–∞–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
for i in {1..30}; do
    if docker-compose -f docker-compose.prod.yml exec app python -c "import requests; requests.get('http://localhost:8000/health')" > /dev/null 2>&1; then
        success "‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≥–æ—Ç–æ–≤–æ"
        break
    fi
    if [ $i -eq 30 ]; then
        error "‚ùå –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ —Å—Ç–∞—Ä—Ç–æ–≤–∞–ª–æ –∑–∞ 30 —Å–µ–∫—É–Ω–¥"
    fi
    sleep 1
done

# –ü—Ä–∏–º–µ–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏—é
log "üöÄ –ü—Ä–∏–º–µ–Ω—è–µ–º –Ω–∞—á–∞–ª—å–Ω—É—é –º–∏–≥—Ä–∞—Ü–∏—é..."
docker-compose -f docker-compose.prod.yml exec app alembic upgrade head

success "‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
log "üìä –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –º–∏–≥—Ä–∞—Ü–∏–π..."
docker-compose -f docker-compose.prod.yml exec app alembic current
docker-compose -f docker-compose.prod.yml exec app alembic history

success "üéâ –ú–∏–≥—Ä–∞—Ü–∏–∏ —É—Å–ø–µ—à–Ω–æ —Å–±—Ä–æ—à–µ–Ω—ã –∏ –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω—ã!"

echo
echo "=== –†–ï–ó–£–õ–¨–¢–ê–¢ ==="
echo "üì¶ Backup —Å—Ç–∞—Ä—ã—Ö –º–∏–≥—Ä–∞—Ü–∏–π: $BACKUP_DIR"
echo "üìù –ù–æ–≤–∞—è –º–∏–≥—Ä–∞—Ü–∏—è: $NEW_NAME"
echo "üóÑÔ∏è –ë–î –æ–±–Ω–æ–≤–ª–µ–Ω–∞ –¥–æ —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å—Ö–µ–º—ã"
echo
echo "=== –î–ê–õ–¨–ù–ï–ô–®–ò–ï –î–ï–ô–°–¢–í–ò–Ø ==="
echo "1. –í—Å–µ –Ω–æ–≤—ã–µ –º–∏–≥—Ä–∞—Ü–∏–∏ –±—É–¥—É—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å—Å—è —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –Ω—É–º–µ—Ä–∞—Ü–∏–µ–π"
echo "2. –î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–π –º–∏–≥—Ä–∞—Ü–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:"
echo "   docker-compose -f docker-compose.prod.yml exec app alembic revision --autogenerate -m '–û–ø–∏—Å–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π'"
echo "3. –î–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –º–∏–≥—Ä–∞—Ü–∏–π:"
echo "   docker-compose -f docker-compose.prod.yml exec app alembic upgrade head"
echo
warning "‚ö†Ô∏è –°—Ç–∞—Ä—ã–µ –º–∏–≥—Ä–∞—Ü–∏–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ $BACKUP_DIR –Ω–∞ —Å–ª—É—á–∞–π –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –æ—Ç–∫–∞—Ç–∞"
