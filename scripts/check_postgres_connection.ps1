# PowerShell –≤–µ—Ä—Å–∏—è —Å–∫—Ä–∏–ø—Ç–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ PostgreSQL
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./scripts/check_postgres_connection.ps1

Write-Host "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ PostgreSQL" -ForegroundColor Blue
Write-Host ""

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—É—Ç—å –∫ docker-compose —Ñ–∞–π–ª—É
$ComposeFile = ""
$EnvType = ""

if ((Test-Path "/opt/llm-bot/app/docker-compose.prod.yml") -and (Test-Path "/opt/llm-bot/config/.env")) {
    $ComposeFile = "/opt/llm-bot/app/docker-compose.prod.yml"
    $EnvType = "Production"
} elseif ((Test-Path "docker-compose.prod.yml") -and (Test-Path "/opt/llm-bot/config/.env")) {
    $ComposeFile = "docker-compose.prod.yml"
    $EnvType = "Production"
} elseif (Test-Path "docker-compose.yml") {
    $ComposeFile = "docker-compose.yml"
    $EnvType = "Development"
} else {
    Write-Host "‚ùå Docker Compose —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω" -ForegroundColor Red
    Write-Host "–î–æ—Å—Ç—É–ø–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã:"
    Write-Host "- Development: docker-compose.yml"
    Write-Host "- Production: docker-compose.prod.yml + /opt/llm-bot/config/.env"
    exit 1
}

Write-Host "üìÅ –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è: $EnvType ($ComposeFile)" -ForegroundColor Blue
Write-Host ""

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å PostgreSQL
Write-Host "üîó –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ PostgreSQL..." -ForegroundColor Blue

try {
    $result = docker-compose -f $ComposeFile exec postgres pg_isready -U postgres -q 2>$null
    if ($LASTEXITCODE -eq 0) {
        Write-Host "‚úÖ PostgreSQL –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è–º" -ForegroundColor Green
    } else {
        Write-Host "‚ùå PostgreSQL –Ω–µ –≥–æ—Ç–æ–≤ –∫ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è–º" -ForegroundColor Red
        Write-Host "–î–ª—è –∑–∞–ø—É—Å–∫–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:"
        Write-Host "docker-compose -f $ComposeFile up -d postgres"
        exit 1
    }
} catch {
    Write-Host "‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ PostgreSQL" -ForegroundColor Red
    Write-Host "–£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ Docker –∑–∞–ø—É—â–µ–Ω –∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:"
    Write-Host "docker-compose -f $ComposeFile up -d postgres"
    exit 1
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
Write-Host "üóÑÔ∏è  –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ catalog_db..." -ForegroundColor Blue

try {
    $version = docker-compose -f $ComposeFile exec postgres psql -U postgres -d catalog_db -t -c "SELECT version();" 2>$null
    if ($LASTEXITCODE -eq 0) {
        Write-Host "‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —Ä–∞–±–æ—Ç–∞–µ—Ç" -ForegroundColor Green
        $versionClean = $version.Trim()
        if ($versionClean) {
            Write-Host "üìã –í–µ—Ä—Å–∏—è: $versionClean" -ForegroundColor Blue
        }
    } else {
        Write-Host "‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö" -ForegroundColor Red
        Write-Host ""
        Write-Host "üîß –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:" -ForegroundColor Yellow
        Write-Host "1. –ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"
        Write-Host "2. –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –µ—â–µ –Ω–µ —Å–æ–∑–¥–∞–Ω–∞"
        Write-Host "3. –ü—Ä–æ–±–ª–µ–º—ã —Å –ø—Ä–∞–≤–∞–º–∏ –¥–æ—Å—Ç—É–ø–∞"
        Write-Host ""
        Write-Host "üìù –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤:" -ForegroundColor Blue
        if ($EnvType -eq "Production") {
            Write-Host "- /opt/llm-bot/config/.env"
        } else {
            Write-Host "- .env —Ñ–∞–π–ª (–µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è)"
            Write-Host "- docker-compose.yml"
        }
        exit 1
    }
} catch {
    Write-Host "‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ –∫ –±–∞–∑–µ" -ForegroundColor Red
    exit 1
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (–µ—Å–ª–∏ –∑–∞–ø—É—â–µ–Ω–æ)
Write-Host "ü§ñ –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..." -ForegroundColor Blue

$appRunning = docker-compose -f $ComposeFile ps app 2>$null | Select-String "Up"
if ($appRunning) {
    Write-Host "‚úÖ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∑–∞–ø—É—â–µ–Ω" -ForegroundColor Green
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º health endpoint
    Start-Sleep -Seconds 2
    try {
        $response = Invoke-WebRequest -Uri "http://localhost:8000/health" -TimeoutSec 5 -ErrorAction Stop
        if ($response.StatusCode -eq 200) {
            Write-Host "‚úÖ Health check –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –ø—Ä–æ—à–µ–ª" -ForegroundColor Green
        } else {
            Write-Host "‚ö†Ô∏è  Health check –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –Ω–µ –ø—Ä–æ—à–µ–ª" -ForegroundColor Yellow
            Write-Host "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: docker-compose -f $ComposeFile logs app"
        }
    } catch {
        Write-Host "‚ö†Ô∏è  Health check –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –Ω–µ –ø—Ä–æ—à–µ–ª" -ForegroundColor Yellow
        Write-Host "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: docker-compose -f $ComposeFile logs app"
    }
} else {
    Write-Host "‚ö†Ô∏è  –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –Ω–µ –∑–∞–ø—É—â–µ–Ω" -ForegroundColor Yellow
}

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
Write-Host ""
Write-Host "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:" -ForegroundColor Blue

try {
    $tablesCount = docker-compose -f $ComposeFile exec postgres psql -U postgres -d catalog_db -t -c "SELECT count(*) FROM information_schema.tables WHERE table_schema = 'public';" 2>$null
    $dbSize = docker-compose -f $ComposeFile exec postgres psql -U postgres -d catalog_db -t -c "SELECT pg_size_pretty(pg_database_size('catalog_db'));" 2>$null
    
    if ($tablesCount) {
        $tablesCountClean = $tablesCount.Trim()
        Write-Host "- –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–∞–±–ª–∏—Ü: $tablesCountClean"
    }
    if ($dbSize) {
        $dbSizeClean = $dbSize.Trim()
        Write-Host "- –†–∞–∑–º–µ—Ä –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: $dbSizeClean"
    }
} catch {
    Write-Host "- –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É"
}

Write-Host ""
Write-Host "üéâ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!" -ForegroundColor Green

# –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
Write-Host ""
Write-Host "üí° –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:" -ForegroundColor Blue
Write-Host "–ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ PostgreSQL:"
Write-Host "  docker-compose -f $ComposeFile exec postgres psql -U postgres -d catalog_db"
Write-Host ""
Write-Host "–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ª–æ–≥–∏ PostgreSQL:"
Write-Host "  docker-compose -f $ComposeFile logs postgres"
Write-Host ""
Write-Host "–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ª–æ–≥–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:"
Write-Host "  docker-compose -f $ComposeFile logs app"
